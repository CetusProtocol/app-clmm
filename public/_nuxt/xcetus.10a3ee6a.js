import{p as u,b as f,s as g,S as p}from"./pool.5c06adc5.js";import{u as c}from"./useWhale.e0cc6618.js";import{a7 as v}from"./entry.d8304b7c.js";import{c as C}from"./sha256.5fd340cd.js";import{D as w}from"./decimal.0e8aa3f1.js";const b=v("xcetus",{state:()=>({venft_id:"",xWhaleBalance:"--",venftInfo:{},pendingAmount:"--",newPendingAmount:"--",whaleBalance:"--",ownerLocks:[],availableXwhale:"--",redeemingXwhale:"--",nextStartTime:"",xcetusShare:"--",pendingCoinInfo:{},newPendingCoinInfo:{},cetusApr:"",claimLoading:"",dividendManagerInfo:{},rewardCoin:{},rewardCoinAmount:"--"}),actions:{async getOwnerVeNFT(n){const i=c("Sui");try{const e=await i.getOwnerVeNFT(n);e?(this.venft_id=e.id,this.xWhaleBalance=u(e.xcetus_balance,9),this.venftInfo={id:e.id,type:e.type,index:e.index,xcetus_balance:e.xcetus_balance},this.getVeNFTDividendInfo()):(this.xWhaleBalance="0",this.availableXwhale="0",this.redeemingXwhale="0",this.pendingAmount="0",this.newPendingAmount="0")}catch{this.xWhaleBalance="--",this.availableXwhale="--",this.redeemingXwhale="--",this.pendingAmount="--",this.newPendingAmount="--"}},async getVeNFTDividendInfo(){const n=c("Sui"),i=f("Sui");try{const e=await n.getVeNFTDividendInfo(this.venft_id,this.dividendManagerInfo),r=await n.getPeriod(this.dividendManagerInfo),d=await i.getTokenList(),h=[];if(e&&e.rewards&&e.rewards.length>0){for(let s=0;s<e.rewards.length;s++)if(e.rewards[s].period<r){const t=e.rewards[s].rewards;for(let o=0;o<t.length;o++){const a=t[o];Number(a.amount)>0&&h.push({...a})}}if(h&&h.length>0){const s={};for(let o=0;o<h.length;o++){const a=h[o];if(s[a.coin_type])s[a.coin_type].amount=new w(s[a.coin_type].amount).add(new w(a.amount)).toString();else{let l=d.filter(m=>m.address==a.coin_type)[0];l||(l=(await i.getTokenListByCoinType([a.coin_type]))[0]),s[a.coin_type]={...a,...l}}}const t=Object.values(s);this.pendingCoinInfo=t[0],this.pendingAmount=g(u(t[0].amount,t[0].decimals),6),this.newPendingCoinInfo=t&&t.length>1?t[1]:{},this.newPendingAmount=t&&t.length>1?g(u(t[1].amount,t[1].decimals),6):0,this.rewardCoin=t&&t.length>2?t[2]:{},this.rewardCoinAmount=t&&t.length>2?g(u(t[2].amount,t[2].decimals),6):0}else{const t=(await n.getPhaseDividendInfo(this.dividendManagerInfo)).bonus.filter(l=>Number(l.value)>0)[0].name,o=p(t,!1);let a=d.filter(l=>l.address==(o=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":o))[0];a||(a=(await i.getTokenListByCoinType([o]))[0]),this.newPendingCoinInfo=a,this.pendingAmount="0",this.newPendingAmount="0",this.rewardCoinAmount="0"}}else this.pendingAmount="0",this.newPendingAmount="0",this.rewardCoinAmount="0"}catch{this.pendingAmount="--",this.newPendingAmount="--"}},async getDividendManager(){const i=await c("Sui").getDividendManager();this.nextStartTime=i.nextStartTime,this.dividendManagerInfo=i,this.getVeNFTDividendInfo()},async getAccountWhaleBalance(n){const e=await c("Sui").getOwnerCetusCoins(n);if(e&&e.length>0){let r=new w(0);e.forEach(d=>{r=r.add(u(d.balance.toString(),9))}),this.whaleBalance=r}else this.whaleBalance="0"},async getOwnerLockCetuss(n){const r=(await c("Sui").getOwnerLockCetuss(n)).sort((d,h)=>d.locked_until_time-h.locked_until_time);this.ownerLocks=r,this.setClaimLoading(""),this.getAvailableXCetus()},async getAvailableXCetus(){const i=await c("Sui").getAvailableXCetus(this.venftInfo,this.ownerLocks);this.availableXwhale=u(i,9),this.redeemingXwhale=this.xWhaleBalance!=="--"?new w(this.xWhaleBalance).sub(new w(this.availableXwhale)).toString():"--"},async getMyShare(n){const i=c("Sui");try{const e=await i.getMyShare(n);e?this.xcetusShare=Number(e)>0&&Number(e)<.01?"<0.01":e:this.xcetusShare="0"}catch{this.xcetusShare=""}},async getXcetusApr(){const{data:n}=await fetch(`${C.Sui.api}/v2/sui/storm/dividend_rewards`).then(e=>e.json()),i=n.apr&&n.apr.replace("%","");this.cetusApr=Number(i)>0&&Number(i)<.01?"<0.01":i},loginOut(){this.venft_id="",this.xWhaleBalance="--",this.venftInfo={},this.pendingAmount="--",this.whaleBalance="--",this.ownerLocks=[],this.availableXwhale="--",this.redeemingXwhale="--",this.xcetusShare="--",this.cetusApr="--"},setClaimLoading(n){this.claimLoading=n}}});export{b as u};
