import{_ as C,S as O,j as B,ao as f,s as M,D as d,c as P,p as m,b as W}from"./pool.cc4a70b7.js";import{$ as F,m as R,L as V,a0 as j}from"./entry.df2391fb.js";function h(s){const o={fullRpcUrl:localStorage.getItem(`${s}-currentRpc`)||C[s||"Sui"].fullRpcUrl,faucetURL:localStorage.getItem(`${s}-currentRpc`)||C[s||"Sui"].faucetURL,simulationAccount:C[s||"Sui"].simulationAccount,xcetus:C[s||"Sui"].xcetus};console.log("defaultNetworkOptions####",o);const e=F(new O(o)),c=B(),l=R(()=>c);V(()=>{l.value.address&&(e.senderAddress=l.value.address)}),console.log(e.senderAddress,"===>sdk.senderAddress");const r=async n=>{const t=await e.XCetusModule.getOwnerLockCetuss(n);return console.log(t,"===>lockWhales"),t},y=async(n,t)=>{const a=f.getAvailableXCetus(n,t);return console.log(a,"==>availableXwhale"),a},v=async n=>{const t=await e.XCetusModule.getOwnerCetusCoins(n);return console.log(t,"===>coins"),t},w=async n=>await e.XCetusModule.getOwnerVeNFT(n),p=async(n,t)=>{const a={amount:n};t&&(a.venft_id=t);const i=await e.XCetusModule.convertPayload(a);return g(i)},u=async()=>{const n=await e.XCetusModule.mintVeNFTPayload();return g(n)},S=async(n,t)=>{const a=await e.XCetusModule.redeemNum(n,t);return console.log(a,"result===>"),{amountOut:a.amountOut,percent:M(new d(a.percent).mul(new d(100)).toString(),2)}},X=async(n,t)=>{const a=await e.XCetusModule.reverseRedeemNum(n,t);return{amountOut:a.amountOut,percent:M(new d(a.percent).mul(new d(100)).toString(),2)}},x=async(n,t,a)=>{const i=await e.XCetusModule.redeemLockPayload({venft_id:t,amount:n,lock_day:a});return console.log(i,"tx===>"),g(i)},b=n=>f.getLockingCetuss(n),k=async(n,t)=>{const a=await e.XCetusModule.getLockCetus(n);if(a&&f.isLocked(a)){const i=e.XCetusModule.cancelRedeemPayload({venft_id:t,lock_id:n});return g(i)}},T=async(n,t)=>{const a=await e.XCetusModule.getLockCetus(n);if(a&&!f.isLocked(a)){const i=await e.XCetusModule.redeemPayload({venft_id:t,lock_id:n});return g(i)}},L=async()=>{const n=await e.XCetusModule.getDividendManager();console.log("dividendManager:",n);const t=Number(f.getNextStartTime(n).toString());return console.log(t,"===>nextStartTime"),{nextStartTime:t,...n}},_=async(n,t)=>{const a=await e.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,n);return{rewards:a&&a.rewards||[]}},N=async n=>{const t=await e.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const a=await e.XCetusModule.redeemDividendPayload(n,t.bonus_types);return g(a)}},A=async n=>{const t=await e.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const a=await e.XCetusModule.redeemDividendV2Payload(n,t.bonus_types);return g(a)}},I=async n=>{const t=await e.XCetusModule.getOwnerVeNFT(n);if(console.log("nfts: ",t),t){const a=await e.XCetusModule.getXcetusManager();console.log("xcetusManager: ",a);const i=new d(t.xcetus_balance).div(a.treasury).mul(100).toString();return console.log("rate: ",i),Number(i)>0&&Number(i)<.01?"<0.01":M(i,2)}else return 0},g=n=>({transactionBlock:n,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getOwnerLockCetuss:r,getOwnerCetusCoins:v,getOwnerVeNFT:w,depositCetus:p,getMintVeNFTPayload:u,redeemNum:S,getRedeemLockPayload:x,getAvailableXCetus:y,getLockingCetuss:b,getCancelRedeemPayload:k,getVeNFTDividendInfo:_,reverseRedeemNum:X,getRedeemPayload:T,getRedeemDividendPayload:N,getMyShare:I,getDividendManager:L,getPeriod:n=>{const t=Date.now()/1e3,{start_time:a,interval_day:i}=n,D=Math.ceil((t-a)/(i*24*3600));return console.log(t,"===>currentTime"),console.log(a,"===>start_time"),console.log(t-a,"===>currentTime-start_time"),console.log((t-a)/(i*60),"(currentTime - start_time) / (interval_day * 60)"),D},getRedeemDividendV2Payload:A}}const K=j("xcetus",{state:()=>({venft_id:"",xWhaleBalance:"--",venftInfo:{},pendingAmount:"--",whaleBalance:"--",ownerLocks:[],availableXwhale:"--",redeemingXwhale:"--",nextStartTime:"",xcetusShare:"--",pendingCoinInfo:{},cetusApr:"",claimLoading:"",dividendManagerInfo:{}}),actions:{async getOwnerVeNFT(s){const o=h("Sui");try{const e=await o.getOwnerVeNFT(s);console.log(e,"===>result"),e&&!P(e)?(this.venft_id=e.id,this.xWhaleBalance=m(e.xcetus_balance,9),this.venftInfo={id:e.id,type:e.type,index:e.index,xcetus_balance:e.xcetus_balance},console.log("执行37"),this.getVeNFTDividendInfo()):(this.xWhaleBalance="0",this.availableXwhale="0",this.redeemingXwhale="0",this.pendingAmount="0")}catch{this.xWhaleBalance="0",this.availableXwhale="0",this.redeemingXwhale="0",this.pendingAmount="0"}},async getVeNFTDividendInfo(){const s=h("Sui"),o=W("Sui");try{const e=await s.getVeNFTDividendInfo(this.venft_id,this.dividendManagerInfo),c=await s.getPeriod(this.dividendManagerInfo);console.log(c,"===>period");let l=0;if(console.log(e,"===>result"),e&&e.rewards){for(let r=0;r<e.rewards.length;r++)if(e.rewards[r].period<c){const y=e.rewards[r].rewards;for(let v=0;v<y.length;v++){const w=y[v],p=await o.getTokenList();console.log(p,"tokenList===>");let u=p.filter(S=>S.address==w.coin_type)[0];u||(u=(await o.getTokenListByCoinType([w.coin_type]))[0]),console.log(u,"==>tokenInfo"),this.pendingCoinInfo=u,console.log(m(w.amount,u.decimals),"==>prettyAmount(ele.amount, tokenInfo[0].decimals)"),l+=Number(m(w.amount,u.decimals))}}console.log(l,"amount===>"),this.pendingAmount=M(l,6),console.log(this.nextStartTime,"===>nextStartTime")}else this.pendingAmount="0"}catch{this.pendingAmount="0"}},async getDividendManager(){const o=await h("Sui").getDividendManager();this.nextStartTime=o.nextStartTime,this.dividendManagerInfo=o,this.getVeNFTDividendInfo()},async getAccountWhaleBalance(s){const e=await h("Sui").getOwnerCetusCoins(s);if(console.log(e,"==>assets"),e&&e.length>0){let c=new d(0);e.forEach(l=>{console.log(m(l.balance.toString(),9),"===>prettyAmount(ele.balance.toString(), 9)"),c=c.add(m(l.balance.toString(),9))}),console.log(this.whaleBalance,"===>this.whaleBalance"),this.whaleBalance=c}else this.whaleBalance="0"},async getOwnerLockCetuss(s){const e=await h("Sui").getOwnerLockCetuss(s);console.log(e,"assets===>");const c=e.sort((l,r)=>l.locked_until_time-r.locked_until_time);this.ownerLocks=c,console.log(this.ownerLocks,"===>this.ownerLocks"),this.setClaimLoading(""),this.getAvailableXCetus()},async getAvailableXCetus(){const o=await h("Sui").getAvailableXCetus(this.venftInfo,this.ownerLocks);console.log(o,"==>result1111"),this.availableXwhale=m(o,9),console.log(this.xWhaleBalance,"===>this.xWhaleBalance"),console.log(this.availableXwhale,"===>this.availableXwhale"),this.redeemingXwhale=this.xWhaleBalance!=="--"?new d(this.xWhaleBalance).sub(new d(this.availableXwhale)).toString():"--"},async getMyShare(s){const e=await h("Sui").getMyShare(s);this.xcetusShare=Number(e)>0&&Number(e)<.01?"<0.01":e,console.log(e,"result===>124")},async getXcetusApr(){const{data:s}=await fetch(`${C.Sui.api}/v2/sui/storm/dividend_rewards`).then(e=>e.json()),o=s.apr&&s.apr.replace("%","");this.cetusApr=Number(o)>0&&Number(o)<.01?"<0.01":o,console.log(s,"data===>")},loginOut(){this.venft_id="",this.xWhaleBalance="--",this.venftInfo={},this.pendingAmount="--",this.whaleBalance="--",this.ownerLocks=[],this.availableXwhale="--",this.redeemingXwhale="--",this.xcetusShare="--"},setClaimLoading(s){this.claimLoading=s}}});export{h as a,K as u};
