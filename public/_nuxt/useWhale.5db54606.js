import{C as F,X as c}from"./index.a64f9d46.js";import{v as V,s as d,D as i}from"./pool.3baa2e38.js";import{c as u,a as _}from"./index.3355c568.js";import{a0 as I,m as W,O as A}from"./entry.475e70a6.js";function j(a){const g={launchpad:u[a||"Sui"].launchpad,xcetus:u[a||"Sui"].xcetus,booster:u[a||"Sui"].booster,maker_bonus:u[a||"Sui"].maker_bonus},m={fullRpcUrl:localStorage.getItem(`${a}-currentRpc`)||u[a||"Sui"].fullRpcUrl,faucetURL:localStorage.getItem(`${a}-currentRpc`)||u[a||"Sui"].faucetURL,faucet:u[a||"Sui"].faucet,simulationAccount:u[a||"Sui"].simulationAccount,token:u[a||"Sui"].token,clmm:u[a||"Sui"].clmm},w=new V(m),s=I(new F(g,w)),C=_(),l=W(()=>C);A(()=>{l.value.address&&(s.ClmmSDK.senderAddress=l.value.address)});const y=async e=>await s.XCetusModule.getOwnerLockCetuss(e),M=async(e,t)=>c.getAvailableXCetus(e,t),v=async e=>await s.XCetusModule.getOwnerCetusCoins(e),f=async e=>await s.XCetusModule.getOwnerVeNFT(e),p=async(e,t)=>{const n={amount:e};t&&(n.venft_id=t);const o=await s.XCetusModule.convertPayload(n);return r(o)},S=async()=>{const e=await s.XCetusModule.mintVeNFTPayload();return r(e)},X=async(e,t)=>{const n=await s.XCetusModule.redeemNum(e,t);return{amountOut:n.amountOut,percent:d(new i(n.percent).mul(new i(100)).toString(),2)}},k=async(e,t)=>{const n=await s.XCetusModule.reverseRedeemNum(e,t);return{amountOut:n.amountOut,percent:d(new i(n.percent).mul(new i(100)).toString(),2)}},D=async(e,t,n)=>{const o=await s.XCetusModule.redeemLockPayload({venft_id:t,amount:e,lock_day:n});return r(o)},P=e=>c.getLockingCetuss(e),b=async(e,t)=>{const n=await s.XCetusModule.getLockCetus(e);if(n&&c.isLocked(n)){const o=s.XCetusModule.cancelRedeemPayload({venft_id:t,lock_id:e});return r(o)}},x=async(e,t)=>{const n=await s.XCetusModule.getLockCetus(e);if(n&&!c.isLocked(n)){const o=await s.XCetusModule.redeemPayload({venft_id:t,lock_id:e});return r(o)}},O=async()=>{const e=await s.XCetusModule.getDividendManager();return{nextStartTime:Number(c.getNextStartTime(e).toString()),...e}},R=async(e,t)=>{const n=await s.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);return{rewards:n&&n.rewards||[]}},h=async e=>{const t=await s.XCetusModule.getDividendManager();if(t.bonus_types.length>0){const n=await s.XCetusModule.redeemDividendPayload(e,t.bonus_types);return r(n)}},T=async e=>{const t=await s.XCetusModule.getDividendManager();if(t.bonus_types.length>0){const n=await s.XCetusModule.redeemDividendV2Payload(e,t.bonus_types);return r(n)}},L=async e=>{const t=await s.XCetusModule.getOwnerVeNFT(e);if(t){const n=await s.XCetusModule.getXcetusManager(),o=new i(t.xcetus_balance).div(n.treasury).mul(100).toString();return Number(o)>0&&Number(o)<.01?"<0.01":d(o,2)}else return 0},r=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getOwnerLockCetuss:y,getOwnerCetusCoins:v,getOwnerVeNFT:f,depositCetus:p,getMintVeNFTPayload:S,redeemNum:X,getRedeemLockPayload:D,getAvailableXCetus:M,getLockingCetuss:P,getCancelRedeemPayload:b,getVeNFTDividendInfo:R,reverseRedeemNum:k,getRedeemPayload:x,getRedeemDividendPayload:h,getMyShare:L,getDividendManager:O,getPeriod:e=>{const t=Date.now()/1e3,{start_time:n,interval_day:o}=e;return Math.ceil((t-n)/(o*24*3600))},getRedeemDividendV2Payload:T}}export{j as u};
