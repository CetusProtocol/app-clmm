import{a6 as Y,l as z,T as G,a7 as H}from"./entry.4aebf40a.js";import{c as r,a as J}from"./sha256.934be29f.js";import{M as Q,C as V,e as X,N as O,o as F,u as Z,b as K,a as C,s as B,O as W,p as I}from"./pool.b6ad4907.js";import{C as N,V as $}from"./index.bab95d66.js";import{D as s}from"./decimal.0e8aa3f1.js";function M(t){const u={launchpad:r[t||"Sui"].launchpad,ido:r[t||"Sui"].ido,xcetus:r[t||"Sui"].xcetus,xcetus_dividends:r[t||"Sui"].xcetus_dividends,cetus_faucet:r[t||"Sui"].cetus_faucet,xtoken:r[t||"Sui"].xtoken,xtoken_dividends:r[t||"Sui"].xtoken_dividends,token_faucet:r[t||"Sui"].token_faucet,booster:r[t||"Sui"].booster,maker_bonus:r[t||"Sui"].maker_bonus,liquidity_stratefy:r[t||"Sui"].liquidity_stratefy,vaults:r[t||"Sui"].vaults},m={fullRpcUrl:localStorage.getItem(`${t}-currentRpclocal2`)||r[t||"Sui"].fullRpcUrl,simulationAccount:r[t||"Sui"].simulationAccount,cetus_config:r[t||"Sui"].cetus_config,clmm_pool:r[t||"Sui"].clmm_pool,integrate:r[t||"Sui"].integrate,deepbook:r[t||"Sui"].deepbook,deepbook_endpoint_v2:r[t||"Sui"].deepbook_endpoint_v2,aggregatorUrl:r[t||"Sui"].aggregatorUrl},n=new Q(m),i=Y(new N(u,n)),a=J(),A=z(()=>a);G(()=>{A.value.address&&(n.senderAddress=A.value.address)});const L=async()=>{const o=await i.Vaults.getVaultList();return o&&o.data||[]},g=async o=>await i.Vaults.getVault(o),e=async o=>{if(n.senderAddress){const _=await i.ClmmSDK.fullClient.getBalance({owner:n.senderAddress,coinType:o});return _&&_.totalBalance}else return 0},y=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:L,getLpBalance:e,deposit:async o=>{const{lowerTick:_,upperTick:P,coinAmount:S,fix_amount_a:f,slippage:d,curSqrtPrice:k,rewarder_coin_types:h}=o,q=V.estLiquidityAndcoinAmountFromOneAmounts(_,P,S,f,!0,d,k),w=f?S.toString():q.tokenMaxA.toString(),p=f?q.tokenMaxB.toString():S.toString(),l=await i.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:w,amount_b:p,fix_amount_a:f,slippage:d,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[]});return y(l)},remove:async o=>{const{lowerSqrtPrice:_,upperSqrtPrice:P,lpTokenAmount:S,curSqrtPrice:f,slippage:d,rewarder_coin_types:k,id:h,liquidity:q}=o,w=await g(h),p=await n.Pool.getPool(w.pool_id),l=V.getCoinAmountFromLiquidity(q,new X(p.current_sqrt_price),_,P,!1);O(l.coinA.toString()).mul(O(1-d)),O(l.coinB.toString()).mul(O(1-d));const v=$.get_protocol_fee_amount(w,l.coinA.toString()),D=$.get_protocol_fee_amount(w,l.coinB.toString()),x=await i.Vaults.remove({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:S.toString(),min_amount_a:F(O(l.coinA.toString()).sub(v).toString(),0)||"",min_amount_b:F(O(l.coinB.toString()).sub(D).toString(),0)||"",rewarder_coin_types:[]});return y(x)},getAutoPool:g}}const st=H("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return Z()}},actions:{async getAutoPoolList(){const u=await M("Sui").getAutoPools(),m=this.getPoolStore,n=u.map(i=>({...m.poolConfigObj[i.pool_id],id:i.id,lp_token_type:i.lp_token_type,autoPoolPositionInfo:i.positins[0],is_pause:i.is_pause,total_supply:i.total_supply,liquidity:i.liquidity,protocol_fee_rate:i.protocol_fee_rate}));this.autoPoolList=n,this.autoPoolObj=Object.fromEntries(n.map((i,a)=>[i.address,i])),this.getMyAutoPoolPosition()},async getMyAutoPoolPosition(){var a,A,L;const t=M("Sui"),u=this.autoPoolList,m=K("Sui"),n=[],{RATES:i}=this.getPoolStore;for(let g=0;g<u.length;g++){const e=u[g],y=await m.getPool(e.address),c=await t.getLpBalance(u[g].lp_token_type),b=(await m.getTokenListByCoinType([u[g].lp_token_type]))[0],o=((a=i[e.coinA.address])==null?void 0:a.price)||"",_=((A=i[e.coinB.address])==null?void 0:A.price)||"",P=e.autoPoolPositionInfo.tick_lower_index,S=e.autoPoolPositionInfo.tick_upper_index,f={tick_lower_index:P,tick_upper_index:S,current_sqrt_price:y==null?void 0:y.current_sqrt_price,liquidity:Number(c)>0?$.get_share_liquidity_by_amount({liquidity:e==null?void 0:e.liquidity,total_supply:e==null?void 0:e.total_supply},c):0},d=m.getCoinAmountFromLiquidity({pool:{...e,current_sqrt_price:y==null?void 0:y.current_sqrt_price},position:f,roundUp:!1}),k=d.coinaAmount,h=d.coinbAmount,q=k,w=h,p=new s(o).mul(new s(k)).toNumber(),l=new s(_).mul(new s(h)).toNumber(),v=p>0&&p<.01?"<$0.01":`$${C(B(p,2))}`,D=l>0&&l<.01?"<$0.01":`$${C(B(l,2))}`;let x=0;Number(c)>0&&(x=new s(c).div(Math.pow(10,b.decimals)));const j=o&&_?B(new s(p).add(new s(l)).toString(),2):"",E=e.total_supply;let U=0;x>0&&E>0&&(U=new s(x).mul(Math.pow(10,b.decimals)).div(new s(E)).mul(100).toNumber());const R=new s(1).div(Math.pow(10,e.decimals)).toNumber();let T=0;U>1?T=B(U,2):U>0&&U<R?T=`<${R}`:U==0?T=0:T=W(U,1),this.positionInfoObj[e.id]={tick_lower_index:P,tick_upper_index:S,current_sqrt_price:y.current_sqrt_price,myLiquidity:I(c,b.decimals),amountA:q,amountB:w,...e,lpInfo:b,myAmountAUSD:v,myAmountBUSD:D,myLiquidityUSD:j,myShare:T},n.push({tick_lower_index:P,tick_upper_index:S,current_sqrt_price:(L=e==null?void 0:e.object)==null?void 0:L.current_sqrt_price,myLiquidity:I(c,b.decimals),amountA:q,amountB:w,...e,lpInfo:b,myAmountAUSD:v,myAmountBUSD:D,myLiquidityUSD:j,myShare:T})}this.positionInfoList=n},async updatePositionItem(t){var x,j;const u=M("Sui"),m=K("Sui"),n=await u.getAutoPool(t),i=await m.getPool(n.pool_id),a={...this.positionInfoObj[t],autoPoolPositionInfo:n.positins[0]},A=await u.getLpBalance(a.lp_token_type),L=(await m.getTokenListByCoinType([a.lp_token_type]))[0],g=a.autoPoolPositionInfo.tick_lower_index,e=a.autoPoolPositionInfo.tick_upper_index,y={tick_lower_index:g,tick_upper_index:e,current_sqrt_price:i.current_sqrt_price,liquidity:$.get_share_liquidity_by_amount({liquidity:n==null?void 0:n.liquidity,total_supply:n==null?void 0:n.total_supply},A)},c=m.getCoinAmountFromLiquidity({pool:{current_sqrt_price:i.current_sqrt_price,...a},position:y,roundUp:!1});c.coinaAmount,c.coinbAmount;const b=c.coinaAmount,o=c.coinbAmount,{RATES:_}=this.getPoolStore,P=n.total_supply,S=((x=_[a.coinA.address])==null?void 0:x.price)||0,f=((j=_[a.coinB.address])==null?void 0:j.price)||0,d=new s(S).mul(new s(c==null?void 0:c.coinaAmount)).toNumber(),k=new s(f).mul(new s(c==null?void 0:c.coinbAmount)).toNumber(),h=d>0&&d<.01?"<$0.01":`$${C(B(d,2))}`,q=k>0&&k<.01?"<$0.01":`$${C(B(k,2))}`;let w=new s(0);Number(A)>0&&(w=new s(A).div(Math.pow(10,L.decimals)));const p=new s(w).mul(Math.pow(10,a.lpInfo.decimals)).div(new s(P)).mul(100).toNumber();let l=0;const v=new s(1).div(Math.pow(10,a.decimals)).toNumber(),D=S&&f?B(new s(d).add(new s(k)).toString(),2):"";p>1?l=B(p,2):p>0&&p<v?l=`<${v}`:l=W(p,1),this.positionInfoObj[t]={...a,tick_lower_index:g,tick_upper_index:e,current_sqrt_price:i.current_sqrt_price,myLiquidity:I(A,L.decimals),amountA:b,amountB:o,myShare:l,myAmountAUSD:h,myAmountBUSD:q,myLiquidityUSD:D}},async getAutoPoolAPY(){try{const{data:t}=await fetch(`${r.Sui.api}/v2/sui/auto_pools`).then(u=>u.json());t&&t.pools&&t.pools.length>0&&(this.apyObj=Object.fromEntries(t.pools.map((u,m)=>[u.object_id,{...u,apr:u.apr.replace("%","")>0&&u.apr.replace("%","")<.01?"<0.01%":B(u.apr.replace("%",""),2)+"%",resultApr:u.apr.replace("%","")}])))}catch{this.apyObj={}}}}});export{M as a,st as u};
