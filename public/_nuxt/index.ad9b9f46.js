var se=Object.defineProperty;var oe=(e,s,t)=>s in e?se(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t;var k=(e,s,t)=>(oe(e,typeof s!="symbol"?s+"":s,t),t);import{ac as ie,ad as K,ae as x,af as g,ag as h,ah as C,ai as B,A as p,aj as N,ak as c,al as m,am as f,an as S,ao as M,ap as $,aq as J,ar as z,as as G,f as A,at as ne,au as Y,av as j,aw as L,ax as X,ay as q,az as ae,aA as re,D as U,aB as ce,aC as de,aD as le}from"./pool.0f02dce8.js";var F="router",T=1e4,P=class{static buildPoolImmutables(e){const{fields:s}=e.value.fields.value;return{clmm_pool_id:p(s.clmm_pool_id).address,booster_type:p(s.booster_type.fields.name).source_address,pool_id:p(s.pool_id).address,coinTypeA:p(s.coin_type_a.fields.name).source_address,coinTypeB:p(s.coin_type_b.fields.name).source_address}}static buildPoolState(e){const s=g(e),t=[];return s.config.fields.contents.forEach(i=>{t.push({lock_day:Number(i.fields.key),multiplier:Number(c(i.fields.value).div(T))})}),{basic_percent:Number(c(s.basic_percent).div(T)),balances:{balances_handle:s.balances.fields.id.id,size:s.balances.fields.size},config:t,lock_positions:{lock_positions_handle:s.lock_positions.fields.id.id,size:s.lock_positions.fields.size},is_open:s.is_open,index:Number(s.index),pool_id:z(e)}}static buildLockNFT(e){const s=p(z(e)).address;return{lock_clmm_position:Y(e),locked_nft_id:s}}static buildLockPositionInfo(e){const s=g(e),{value:t}=s.value.fields;return{type:t.type,position_id:t.fields.position_id,start_time:Number(t.fields.start_time),lock_period:Number(t.fields.lock_period),end_time:Number(t.fields.end_time),growth_rewarder:t.fields.growth_rewarder,rewarder_owned:t.fields.rewarder_owned,is_settled:t.fields.is_settled}}static isLocked(e){return e.end_time>Date.parse(new Date().toString())/1e3}},ue=class{constructor(e){k(this,"_sdk");k(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var n;const{booster:s}=this._sdk.sdkOptions,t=`${s.booster_display}_getPoolImmutables`,o=this.getCache(t,e),i=[];if(o!==void 0)i.push(...o);else{const r=[];(n=(await K(this._sdk.ClmmSDK,s.config.booster_pool_handle)).data)==null||n.forEach(d=>{r.push(d.objectId)});const l=await x(this._sdk.ClmmSDK,r,{showContent:!0});for(const d of l){const u=g(d);if(u){const _=P.buildPoolImmutables(u);this.updateCache(`${_.pool_id}_getPoolImmutable`,_,h),i.push(_)}}}return this.updateCache(t,i,h),i}async getPoolImmutable(e){const{booster:s}=this._sdk.sdkOptions,t=`${e}_getPoolImmutable`,o=this.getCache(t);if(o!==void 0)return o;const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:s.config.booster_pool_handle,name:{type:"0x2::object::ID",value:e}}),n=g(i),r=P.buildPoolImmutables(n);return this.updateCache(t,r,h),r}async getPools(){const e=[],t=(await this.getPoolImmutables()).map(i=>i.pool_id),o=await x(this._sdk.ClmmSDK,t,{showType:!0,showContent:!0});for(const i of o){const n=P.buildPoolState(i);if(n){const r={...await this.getPoolImmutable(n.pool_id),...n};e.push(r);const a=`${r.pool_id}_getPoolObject`;this.updateCache(a,r,h)}}return e}async getPool(e,s=!0){const t=`${e}_getPoolObject`,o=this.getCache(t,s),i=await this.getPoolImmutable(e);if(o!==void 0)return{...i,...o};const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),r=P.buildPoolState(n),a={...i,...r};return this.updateCache(t,a,h),a}async getPoolHandleId(e){const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),t=g(s);return t?t.list.fields.id.id:""}async getInitFactoryEvent(){var o;const{booster_display:e}=this.sdk.sdkOptions.booster,s=(o=await C(this._sdk.ClmmSDK,{MoveEventType:`${e}::config::InitEvent`}))==null?void 0:o.data,t={booster_config_id:"",booster_pool_handle:""};return s.length>0&&s.forEach(i=>{const n=i.parsedJson;n&&(t.booster_config_id=n.config_id)}),t.booster_pool_handle=await this.getPoolHandleId(t.booster_config_id),t}async getOwnerBoosterPositions(e,s,t){const{booster:o}=this.sdk.sdkOptions,i=[],n=[],r=`${o.booster_display}::lock_nft::LockNFT<${this._sdk.ClmmSDK.Position.buildPositionType()}>`,a=await B(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0,showOwner:!0},filter:{StructType:r}});for(const d of a.data)if(p(N(d)).source_address===r&&d.data){const _=P.buildLockNFT(d);this.updateCache(`${_.locked_nft_id}_getBoosterPositionById`,_,h),_&&(s===void 0||s===_.lock_clmm_position.pool)&&i.push(_)}const l=await this.getLockPositionInfos(t,i.map(d=>d.locked_nft_id));for(const d of i)for(const u of l)if(d.lock_clmm_position.pos_object_id===u.position_id){n.push({...d,...u});break}return n}async getBoosterPosition(e,s){const t=`${s}_getBoosterPositionById`,o=this.getCache(t);let i;if(o!==void 0)i=o;else{const r=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0,showOwner:!0}});i=P.buildLockNFT(r),this.updateCache(t,i,h)}const n=await this.getLockPositionInfo(e,s);return{...i,...n}}async getLockPositionInfos(e,s=[]){var n;const t=await K(this._sdk.ClmmSDK,e),o=[],i=[];return(n=t.data)==null||n.forEach(r=>{s.length>0?s.includes(r.name.value)&&o.push(r.objectId):o.push(r.objectId)}),o.length>0&&(await x(this._sdk.ClmmSDK,o,{showContent:!0})).forEach(a=>{const l=P.buildLockPositionInfo(a);l&&i.push(l)}),i}async getLockPositionInfo(e,s){const t=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:s}});return P.buildLockPositionInfo(t)}calculateXCetusRewarder(e,s,t){let o=s.basic_percent,i="0";e.forEach(a=>{a.coin_address===s.booster_type&&(console.log("find ",s.booster_type),i=a.amount_owed.toString())}),t.is_settled||s.config.forEach(a=>{a.lock_day===t.lock_period&&(o=a.multiplier)});const n=c(i).sub(t.growth_rewarder).mul(o);return c(t.rewarder_owned).add(n).toString()}lockPositionPayload(e){const{booster:s}=this.sdk.sdkOptions,{clmm:t}=this.sdk.ClmmSDK.sdkOptions,o=new m;return o.moveCall({target:`${s.booster_router}::${F}::lock_position`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[o.pure(s.config.booster_config_id),o.pure(t.config.global_config_id),o.pure(e.booster_pool_id),o.pure(e.clmm_pool_id),o.pure(e.clmm_position_id),o.pure(e.lock_day),o.pure(f)]}),o}canceLockPositionPayload(e){const{booster:s}=this.sdk.sdkOptions,t=new m;return t.moveCall({target:`${s.booster_router}::${F}::cancel_lock`,typeArguments:[e.booster_type],arguments:[t.pure(s.config.booster_config_id),t.pure(e.booster_pool_id),t.pure(e.lock_nft_id),t.pure(f)]}),t}redeemPayload(e){const{booster:s,xcetus:t}=this.sdk.sdkOptions,{clmm:o}=this.sdk.ClmmSDK.sdkOptions,i=new m;return i.moveCall({target:`${s.booster_router}::${F}::redeem`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[i.pure(s.config.booster_config_id),i.pure(o.config.global_config_id),i.pure(e.booster_pool_id),i.pure(e.lock_nft_id),i.pure(e.clmm_pool_id),i.pure(t.config.lock_manager_id),i.pure(t.config.xcetus_manager_id),i.pure(e.ve_nft_id),i.pure(f)]}),i}updateCache(e,s,t=$){let o=this._cache[e];o?(o.overdueTime=S(t),o.value=s):o=new M(s,S(t)),this._cache[e]=o}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},b="router",Q=1e9,w=class{static priceRealToFix(e,s,t){const o=c(s-t).toNumber();return Number(c(e).div(c(10).pow(c(o))).toString())}static priceFixToReal(e,s,t){const o=c(s-t).toNumber();return Number(c(e).mul(c(10).pow(c(o))).toString())}static raiseTotalAmount(e,s,t){const o=c(s-t).abs().toNumber();return s>t?Number(c(e.sale_total).mul(e.current_price).div(c(10).pow(c(o))).toString()):Number(c(e.sale_total).mul(e.current_price).mul(c(10).pow(c(o))).toString())}static buildLaunchPadPool(e){const s=N(e),t=p(s),o=g(e),i={coin_type_sale:t.type_arguments[0],coin_type_raise:t.type_arguments[1],pool_address:J(z(e)),pool_type:G(t.full_address,t.type_arguments),is_settle:o.is_settle,current_price:c(o.initialize_price).div(c(Q)).toString(),min_price:"0",max_price:"0",sale_coin_amount:o.sale_coin,raise_coin_amount:o.raise_coin,reality_raise_total:o.reality_raise_total,sale_total:o.sale_total,min_purchase:o.min_purchase,max_purchase:o.max_purchase,least_raise_amount:o.least_raise_amount,softcap:o.softcap,hardcap:o.hardcap,liquidity_rate:Number(o.liquidity_rate)/1e4,activity_start_time:Number(o.duration_manager.fields.start_time),activity_end_time:0,settle_end_time:0,activity_duration:Number(o.duration_manager.fields.activity_duration),settle_duration:Number(o.duration_manager.fields.settle_duration),locked_duration:Number(o.duration_manager.fields.locked_duration),is_cancel:o.is_cancel,white_summary:{white_handle:o.white_list.fields.users.fields.id.id,white_hard_cap_total:o.white_list.fields.hard_cap_total,white_purchase_total:o.white_list.fields.purchase_total,size:Number(o.white_list.fields.users.fields.size)},unused_sale:o.unused_sale,harvest_raise:o.harvest_raise,tick_spacing:Number(o.tick_spacing),recipient:o.recipient,purchase_summary:{purchase_handle:o.purchase_list.fields.id.id,size:Number(o.purchase_list.fields.size)},pool_status:"Failed"};return w.updatePoolStatus(i),i}static updatePoolStatus(e){const s=Number(c(Date.now()/1e3).toFixed(0)),t=e.activity_start_time+e.activity_duration,o=t+e.settle_duration;if(e.activity_end_time=t,e.settle_end_time=o,e.is_settle)e.pool_status="Ended";else if(e.is_cancel)e.pool_status="Canceled";else if(s<e.activity_start_time)e.pool_status="Upcoming";else if(s>e.activity_start_time&&s<t)e.pool_status="Live";else if(s>t&&s<o){const i=e.raise_coin_amount;Number(i)<Number(e.least_raise_amount)?e.pool_status="Failed":e.pool_status="Settle"}return e}static updatePoolCurrentPrice(e,s,t){return e.current_price=this.priceFixToReal(Number(e.current_price),s,t).toString(),Number(e.current_price)}static async calculatePoolPrice(e,s){const t=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([s.coin_type_sale,s.coin_type_raise]),o=t[s.coin_type_sale].decimals,i=t[s.coin_type_raise].decimals;s.min_price=this.priceFixToReal(Number(c(s.softcap).div(c(s.sale_total))),o,i).toString(),s.max_price=this.priceFixToReal(Number(c(s.hardcap).div(c(s.sale_total))),o,i).toString(),w.updatePoolCurrentPrice(s,o,i)}static async getWithdrawRaise(e){return e.pool_status==="Ended"?e.harvest_raise:"0"}static async getWithdrawSale(e){return e.pool_status==="Ended"?e.unused_sale:e.sale_coin_amount}static async getHistoryWithdrawRaise(e,s){if(s.pool_status==="Ended"){if(c(s.harvest_raise).equals(c(0))){const o=await e.Launchpad.getSettleEvent(s.pool_address);o&&(s.harvest_raise=o.unused_raise)}const t=A.min(new A(s.reality_raise_total),new A(s.hardcap));return c(t.toString()).mul(1-s.liquidity_rate)}return"0"}static async getHistoryWithdrawSale(e,s){if(s.pool_status==="Ended"){const t=await e.Launchpad.getSettleEvent(s.pool_address);return t&&(s.unused_sale=t.unused_sale),s.unused_sale}return"0"}static async getOverrecruitReverseAmount(e,s){const t=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[s.pool_address],!1);if(t.length>0){const o=t[0].purchase_total,i=(await e.Launchpad.getPurchaseAmount(s.white_summary.white_handle,e.ClmmSDK.senderAddress)).safe_purchased_amount,{white_purchase_total:n}=s.white_summary;return c(o).sub(i).div(c(s.reality_raise_total).sub(n)).mul(c(s.reality_raise_total).sub(s.hardcap)).toString()}return"0"}static async getCanPurchaseAmount(e,s){const t=await w.getOverrecruitReverseAmount(e,s),o=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[s.pool_address],!1);if(o){const i=o[0].purchase_total;c(i).sub(t).div(s.current_price)}return"0"}},_e=class{constructor(e){k(this,"_sdk");k(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=[],s=0,t=100,o=!1){var u;const{ido_display:i}=this._sdk.sdkOptions.launchpad;if(i===void 0)throw Error("sdk.sdkOptions.launchpad is undefined");const n=`${i}_getPoolImmutables`,r=this.getCache(n,o),a=[],l=[];if(r!==void 0&&a.push(...r),a.length===0)try{((u=await C(this._sdk.ClmmSDK,{MoveEventType:`${i}::factory::CreatePoolEvent`}))==null?void 0:u.data).forEach(y=>{const v=y.parsedJson;v&&a.push({pool_address:v.pool_id,coin_type_sale:p(v.sale_coin.name).full_address,coin_type_raise:p(v.raise_coin.name).full_address})}),this.updateCache(n,a,h)}catch(_){console.log("getPoolImmutables",_)}const d=e.length>0;for(let _=0;_<a.length;_+=1){const y=a[_];if(!(d&&!e.includes(y.pool_address))){if(!d){const v=_;if(v<s||v>=s+t)continue}l.push(y)}}return l}async getPoolImmutablesWithPage(e="all",s=!1){const{ido_display:t}=this._sdk.sdkOptions.launchpad,o=`${t}_getPoolImmutables`,i=[],n={data:[],hasNextPage:!1},r=e==="all";if(r){const a=this.getCache(o,s);a&&i.push(...a)}if(i.length===0)try{const a=await C(this._sdk.ClmmSDK,{MoveEventType:`${t}::factory::CreatePoolEvent`},e);n.hasNextPage=a.hasNextPage,n.nextCursor=a.nextCursor,a.data.forEach(l=>{const d=l.parsedJson;d&&i.push({pool_address:d.pool_id,coin_type_sale:p(d.sale_coin.name).full_address,coin_type_raise:p(d.raise_coin.name).full_address})})}catch(a){console.log("getPoolImmutables",a)}return n.data=i,r&&this.updateCache(o,i,h),n}async getPools(e=[],s=0,t=100){const o=[];let i=[];e.length>0?i=[...e]:(await this.getPoolImmutables([],s,t,!1)).forEach(a=>{i.push(a.pool_address)});const n=await x(this.sdk.ClmmSDK,i,{showType:!0,showContent:!0});for(const r of n){const a=w.buildLaunchPadPool(r);await w.calculatePoolPrice(this._sdk,a),o.push(a);const l=`${a.pool_address}_getPoolObject`;this.updateCache(l,a,h)}return o}async getPool(e,s=!0){const t=`${e}_getPoolObject`,o=this.getCache(t,s);if(o!==void 0){const r=o;return w.updatePoolStatus(r),r}const i=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),n=w.buildLaunchPadPool(i);return await w.calculatePoolPrice(this._sdk,n),this.updateCache(t,n),n}async getInitFactoryEvent(e=!1){var l;const s=this._sdk.sdkOptions.launchpad.ido_display,t=`${s}_getInitEvent`,o=this.getCache(t,e);if(o!==void 0)return o;const i=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showPreviousTransaction:!0}}),n=ne(i),r=(l=await C(this._sdk.ClmmSDK,{Transaction:n}))==null?void 0:l.data,a={pools_id:"",admin_cap_id:"",config_cap_id:""};return r.length>0&&(r.forEach(d=>{const u=d.parsedJson;if(u)switch(p(d.type).full_address){case`${s}::config::InitConfigEvent`:a.admin_cap_id=u.admin_cap_id,a.config_cap_id=u.config_cap_id;break;case`${s}::factory::InitFactoryEvent`:a.pools_id=u.pools_id;break}}),this.updateCache(t,a,h)),a}async getLockNFT(e,s=!1){const t=`${e}_getLockNFT`,o=this.getCache(t,s);if(o!==void 0)return o;const i=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!i.error)return Y(i)}async getLockNFTList(e,s){var r;const{clmm_display:t}=this._sdk.ClmmSDK.sdkOptions.clmm,{sdkOptions:o}=this._sdk,i=[],n=p(e);try{const a=(r=await C(this._sdk.ClmmSDK,{MoveEventType:`${o.launchpad.ido_display}::lock::LockNFTEvent`}))==null?void 0:r.data;for(const l of a){const d=l.parsedJson;if(d){const u={locked_time:Number(d.locked_time),end_lock_time:Number(d.end_lock_time),nft_type:d.nft_type_name.name,lock_nft_id:d.lock_nft_id,recipient:d.recipient};if(s===u.recipient&&`${t}`===p(u.nft_type).address){const _=await this.getLockNFT(u.lock_nft_id);if(_){const y=p(_.coin_type_a).full_address,v=p(_.coin_type_b).full_address;(n.type_arguments[0]===y&&n.type_arguments[1]===v||n.type_arguments[0]===v&&n.type_arguments[1]===y)&&i.push({..._,coin_type_a:y,coin_type_b:v,...u})}}}}return i}catch(a){return console.log("getLockNFTList:",a),[]}}async creatPoolTransactionPayload(e){const{launchpad:s}=this.sdk.sdkOptions,t=s.config;if(this.assertLuanchpadConfig(),this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const o=w.priceRealToFix(Number(e.initialize_price),e.sale_decimals,e.raise_decimals),i=new m,n=c(e.sale_total).add(c(e.sale_total).mul(c(e.liquidity_rate))).toNumber(),r=await j.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,i,BigInt(n),e.coin_type_sale),a=[i.pure(t.admin_cap_id),i.pure(t.config_cap_id),i.pure(t.pools_id),i.pure(L(e.recipient)),i.pure((o*Q).toString()),r,i.pure(e.sale_total.toString()),i.pure(e.min_purchase.toString()),i.pure(e.max_purchase.toString()),i.pure(e.least_raise_amount.toString()),i.pure(e.hardcap.toString()),i.pure((e.liquidity_rate*1e3).toString()),i.pure(e.start_time.toString()),i.pure(e.activity_duration.toString()),i.pure(e.settle_duration.toString()),i.pure(e.locked_duration.toString()),i.pure(e.tick_spacing.toString()),i.pure(f)],l=[e.coin_type_sale,e.coin_type_raise];return i.moveCall({target:`${s.ido_router}::${b}::create_launch_pool`,typeArguments:l,arguments:a}),i}async creatPurchasePayload(e){const{launchpad:s}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const t=new m,o=await j.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,t,BigInt(e.purchase_amount),e.coin_type_raise),i=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],n=[e.coin_type_sale,e.coin_type_raise];let r;return i?r=[t.pure(e.pool_address),t.pure(s.config.config_cap_id),t.pure(i.id),o,t.pure(e.purchase_amount.toString()),t.pure(f)]:r=[t.pure(e.pool_address),t.pure(s.config.config_cap_id),o,t.pure(e.purchase_amount.toString()),t.pure(f)],t.moveCall({target:`${s.ido_router}::${b}::${i===void 0?"create_and_purchase":"purchase"}`,typeArguments:n,arguments:r}),t}async creatClaimPayload(e){const{launchpad:s}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const t=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],o=new m,i=[e.coin_type_sale,e.coin_type_raise],n=[o.pure(e.pool_address),o.pure(s.config.config_cap_id),o.pure(t==null?void 0:t.id),o.pure(f)];return o.moveCall({target:`${s.ido_router}::${b}::claim`,typeArguments:i,arguments:n}),o}async creatSettlePayload(e){var a;const{launchpad:s}=this.sdk.sdkOptions,{clmm:t}=this.sdk.ClmmSDK.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");this.assertLuanchpadConfig();const o=t.config,{clmm_args:i}=e,n=new m;n.setSender(this.sdk.ClmmSDK.senderAddress);const r=[e.coin_type_sale,e.coin_type_raise];if(i){const l=i.opposite?X.priceToSqrtPriceX64(c(1).div(i.current_price),i.raise_decimals,i.sale_decimals).toString():X.priceToSqrtPriceX64(c(i.current_price),i.sale_decimals,i.raise_decimals).toString(),d=BigInt(l)<BigInt(i.clmm_sqrt_price),u=i.opposite?d?e.coin_type_raise:e.coin_type_sale:d?e.coin_type_sale:e.coin_type_raise,_=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,u);let y=q.calculateTotalBalance(_);q.isSuiCoin(u)&&(y-=BigInt(2e8));const Z=(a=j.buildCoinInputForAmount(n,_,y,u))==null?void 0:a.transactionArgument,ee=i.opposite?d?"settle_with_reverse_clmm_only_with_a":"settle_with_reverse_clmm_only_with_b":d?"settle_only_with_a":"settle_only_with_b",te=[n.pure(e.pool_address),n.pure(s.config.config_cap_id),n.pure(i.clmm_pool_address),n.pure(o.global_config_id),n.pure(l),Z,n.pure(f)];n.moveCall({target:`${s.ido_router}::${b}::${ee}`,typeArguments:r,arguments:te})}else n.moveCall({target:`${s.ido_router}::${b}::settle`,typeArguments:r,arguments:[n.pure(e.pool_address),n.pure(s.config.config_cap_id),n.pure(f)]});return n}creatWithdrawPayload(e){const{launchpad:s}=this.sdk.sdkOptions,t=new m,o=[e.coin_type_sale,e.coin_type_raise],i=[t.object(e.pool_address),t.object(s.config.config_cap_id),t.object(f)];return e.sale_amount>BigInt(0)&&t.moveCall({target:`${s.ido_router}::${b}::withdraw_sale`,typeArguments:o,arguments:i}),e.raise_amount>BigInt(0)&&t.moveCall({target:`${s.ido_router}::${b}::withdraw_raise`,typeArguments:o,arguments:i}),t}addUserToWhitelisPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new m,o=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(i=>{const n=[t.object(s.config.admin_cap_id),t.object(s.config.config_cap_id),t.object(e.pool_address),t.object(i),t.pure(e.safe_limit_amount),t.object(f)];t.moveCall({target:`${s.ido_router}::${b}::add_user_to_whitelist`,typeArguments:o,arguments:n})}),t}updateWhitelistCapPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new m,o=[e.coin_type_sale,e.coin_type_raise];return e.safe_limit_amount>0&&t.moveCall({target:`${s.ido_router}::${b}::update_whitelist_member_safe_limit_amount`,typeArguments:o,arguments:[t.object(s.config.admin_cap_id),t.object(s.config.config_cap_id),t.object(e.pool_address),t.pure(e.white_list_member),t.pure(e.safe_limit_amount),t.object(f)]}),e.hard_cap_total>0&&t.moveCall({target:`${s.ido_router}::${b}::update_whitelist_hard_cap_total`,typeArguments:o,arguments:[t.object(s.config.admin_cap_id),t.object(s.config.config_cap_id),t.object(e.pool_address),t.pure(e.hard_cap_total),t.object(f)]}),t}creatRemoveWhitelistPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new m,o=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(i=>{const n=[t.pure(s.config.admin_cap_id),t.pure(s.config.config_cap_id),t.pure(e.pool_address),t.pure(i),t.pure(f)];t.moveCall({target:`${s.ido_router}::${b}::remove_user_from_whitelist`,typeArguments:o,arguments:n})}),t}creatCancelPoolPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new m,o=[e.coin_type_sale,e.coin_type_raise],i=[t.pure(s.config.admin_cap_id),t.pure(s.config.config_cap_id),t.pure(e.pool_address),t.pure(f)];return t.moveCall({target:`${s.ido_router}::${b}::cancel`,typeArguments:o,arguments:i}),t}updateRecipientPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new m,o=[e.coin_type_sale,e.coin_type_raise],i=[t.pure(s.config.admin_cap_id),t.pure(s.config.config_cap_id),t.pure(e.pool_address),t.pure(e.new_recipient),t.pure(f)];return t.moveCall({target:`${s.ido_router}::${b}::update_recipient_address`,typeArguments:o,arguments:i}),t}updatePoolDuractionPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new m,o=[e.coin_type_sale,e.coin_type_raise],i=[t.pure(s.config.admin_cap_id),t.pure(s.config.config_cap_id),t.pure(e.pool_address),t.pure(e.activity_duration),t.pure(e.settle_duration),t.pure(e.lock_duration),t.pure(f)];return t.moveCall({target:`${s.ido_router}::${b}::update_pool_duration`,typeArguments:o,arguments:i}),t}creatUnlockNftPayload(e){const{launchpad:s}=this.sdk.sdkOptions;if(s.config===void 0)throw Error("launchpad.config  is null");const t=new m,o=[e.nft_type],i=[t.pure(e.lock_nft),t.pure(f)];return t.moveCall({target:`${s.ido_router}::lock::unlock_nft`,typeArguments:o,arguments:i}),t}async isAdminCap(e){const{launchpad:s}=this._sdk.sdkOptions;if(s.config===void 0)throw Error("launchpad config is empty");const t=`${e}_isAdminCap`,o=this.getCache(t);if(o)return o;const i=await this._sdk.ClmmSDK.fullClient.getObject({id:s.config.admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(i);const n=ae(i),r=re(i);let a=!1;return r&&n&&p(n).source_address===`${s.ido_display}::config::AdminCap`&&(a=L(r.AddressOwner)===L(e)),this.updateCache(t,a,h),a}async isWhiteListUser(e,s){const t={type:"address",value:s};try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:t});return!!(o&&o.data)}catch{return!1}}async getPurchaseAmount(e,s){var o;const t={type:"address",value:s};try{const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:t}),n=g(i);if(console.log(n),n)return(o=n==null?void 0:n.value)==null?void 0:o.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getPurchaseMarks(e,s=[],t=!0){const{launchpad:o}=this._sdk.sdkOptions,i=`${s}_getPurchaseMark`,n=this.getCache(i,t);if(!t&&n!==void 0)return n;let r=null;const a=[];for(;;){const l=await this._sdk.ClmmSDK.fullClient.getOwnedObjects({owner:e,options:{showType:!0,showContent:!0,showDisplay:!0},cursor:r});for(const d of l.data){const{fields:u}=d.data.content;if(p(N(d)).source_address===`${o.ido_display}::pool::PurchaseMark`){console.log("fields: ",u);const y={id:u.id.id,pool_id:p(u.pool_id).address,purchase_total:u.purchase_total,obtain_sale_amount:u.obtain_sale_amount,used_raise_amount:u.used_raise_amount};s.length>0?s.includes(y.pool_id)&&a.push(y):a.push(y)}}if(l.hasNextPage)r=l.nextCursor;else break}return this.updateCache(i,a,h),a}async getSettleEvent(e){const{launchpad:s}=this._sdk.sdkOptions,t=`${e}_getPurchaseMark`,o=this.getCache(t);if(o!==void 0)return o;const i=await C(this._sdk.ClmmSDK,{MoveEventType:`${s.ido_display}::pool::SettleEvent`});for(const n of i.data){const r=n.parsedJson;if(e===J(r.pool_id)){const a={pool_id:r.pool_id,settle_price:r.settle_price,unused_sale:r.unused_sale,unused_raise:r.unused_raise,white_purchase_total:r.white_purchase_total};return this.updateCache(t,a,h),a}}}buildLaunchpadCoinType(e,s){return G(this._sdk.sdkOptions.launchpad.ido_display,"pool",le,[e,s])}assertLuanchpadConfig(){const{launchpad:e}=this.sdk.sdkOptions;if(e.config===void 0)throw Error("sdk launchpad.config is null")}updateCache(e,s,t=$){let o=this._cache[e];o?(o.overdueTime=S(t),o.value=s):o=new M(s,S(t)),this._cache[e]=o}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},D=class{static buildPoolImmutables(e){const{fields:s}=e.value.fields.value;return{clmm_pool_id:p(s.clmm_pool_id).address,bonus_type:p(s.bonus_type.fields.name).source_address,pool_id:p(s.pool_id).address,coinTypeA:p(s.coin_type_a.fields.name).source_address,coinTypeB:p(s.coin_type_b.fields.name).source_address}}static buildPoolState(e){const s=g(e),t=[];return s.config.fields.contents.forEach(i=>{t.push({rate:Number(c(i.fields.key).div(T)),multiplier:Number(c(i.fields.value).div(T))})}),{balance:s.balance,config:t,is_open:s.is_open,index:Number(s.index),start_time:Number(s.start_time),interval_day:Number(s.interval_day),minimum_percent_to_reward:Number(c(s.minimum_percent_to_reward).div(T)),rewarders:{rewarder_handle:s.rewarders.fields.id.id,size:Number(s.rewarders.fields.size)},whale_nfts:{whale_nfts_handle:s.whale_nfts.fields.id.id,size:Number(s.whale_nfts.fields.size)},points:{point_handle:s.points.fields.id.id,size:Number(s.points.fields.size)}}}static buildMarkerPositions(e){const{contents:s}=e.value.fields.value.fields,t=[],o=e.id.id;return s.forEach(i=>{const{key:n,value:r}=i.fields,a={id:n,period_id:o,bonus_num:r.fields.bonus_num,point:r.fields.point,is_burn:r.fields.is_burn,point_after_multiplier:r.fields.point_after_multiplier,percent:Number(c(r.fields.percent).div(T)),fee_share_rate:0,is_redeemed:r.fields.is_redeemed};t.push(a)}),t}static buildPoolBonusInfo(e){const{fields:s,type:t}=e.value.fields.value;return{type:t,time:Number(s.time),settle_time:Number(s.settle_time),settled_num:s.settled_num,is_settled:s.is_settled,basis_bonus:s.basis_bonus,total_bonus:s.total_bonus,is_vacant:s.is_vacant,redeemed_num:s.redeemed_num}}static getBonusPercent(e,s){let t=0;for(const o of e)s>=o.rate&&o.rate>t&&(t=o.multiplier);return t}},W="router",pe=class{constructor(e){k(this,"_sdk");k(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var n;const{maker_bonus:s}=this._sdk.sdkOptions,t=`${s.maker_display}_getPoolImmutables`,o=this.getCache(t,e),i=[];if(o!==void 0)i.push(...o);else{const r=[];(n=(await K(this._sdk.ClmmSDK,s.config.maker_pool_handle)).data)==null||n.forEach(d=>{r.push(d.objectId)});const l=await x(this._sdk.ClmmSDK,r,{showContent:!0});for(const d of l){const u=g(d);u&&i.push(D.buildPoolImmutables(u))}}return i}async getPoolImmutable(e){const{maker_bonus:s}=this._sdk.sdkOptions,t=`${s.maker_display}_getPoolImmutables`,o=this.getCache(t);if(o!==void 0){const r=o.filter(a=>e===a.pool_id);if(r.length>0)return r[0]}const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:s.config.maker_pool_handle,name:{type:"0x2::object::ID",value:e}}),n=g(i);return D.buildPoolImmutables(n)}async getPools(){const e=[],s=await this.getPoolImmutables(),t=s.map(n=>n.pool_id),o=await x(this._sdk.ClmmSDK,t,{showType:!0,showContent:!0});let i=0;for(const n of o){const r=D.buildPoolState(n);if(r){const a={...s[i],...r};e.push(a);const l=`${a.pool_id}_getPoolObject`;this.updateCache(l,a,h)}i+=1}return e}async getPool(e,s=!0){const t=`${e}_getPoolObject`,o=this.getCache(t,s),i=await this.getPoolImmutable(e);if(o!==void 0)return o;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),r=D.buildPoolState(n),a={...i,...r};return this.updateCache(t,a,h),a}async getPoolHandleId(e){const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),t=g(s);return t?t.list.fields.id.id:""}async getMakerPoolPeriods(e,s=!1){const t=[],o=`${e.pool_id}_getMakerPoolPeriods`,i=this.getCache(o,s);return i!==void 0?i:((await K(this._sdk.ClmmSDK,e.whale_nfts.whale_nfts_handle)).data.forEach(r=>{const a={id:r.objectId,start_time:0,end_time:0,period:Number(r.name.value)};a.start_time=Number(c(e.start_time).add(c(e.interval_day).mul(24*3600).mul(a.period)).toFixed(0,U.ROUND_DOWN)),a.end_time=Number(c(a.start_time).add(c(e.interval_day).mul(24*3600)).toFixed(0,U.ROUND_DOWN)),t.push(a)}),this.updateCache(o,t,h),t)}async getInitFactoryEvent(){var o;const{maker_display:e}=this.sdk.sdkOptions.maker_bonus,s=(o=await C(this._sdk.ClmmSDK,{MoveEventType:`${e}::config::InitEvent`}))==null?void 0:o.data,t={maker_config_id:"",maker_pool_handle:""};return s.length>0&&s.forEach(i=>{const n=i.parsedJson;n&&(t.maker_config_id=n.config_id)}),t.maker_pool_handle=await this.getPoolHandleId(t.maker_config_id),t}async getPoolMarkerPositionList(e,s,t=!1){const o={},i=[];t||s.forEach(n=>{const r=`${e}_${n.period}_getPoolMarkerPositionList`,a=this.getCache(r);a!==void 0?o[n.period]=a:(o[n.period]=[],i.push(n))});try{i.length>0&&(await x(this._sdk.ClmmSDK,i.map(a=>a.id),{showContent:!0})).forEach(a=>{const l=g(a),d=D.buildMarkerPositions(l);if(d.length>0){const{period_id:u}=d[0],_=s.filter(y=>y.id===u)[0];o[_.period]=d}});const n=[];for(const r in o)o[r].forEach(l=>{n.push(l)});if(n.length>0){const r=await this._sdk.ClmmSDK.Position.getSipmlePositionList(n.map(a=>a.id));for(const a of n)for(const l of r)if(a.id===l.pos_object_id){a.clmm_position=l;break}}}catch(n){console.log(n)}for(const n in o){const r=`${e}_${n}_getPoolMarkerPositionList`;this.updateCache(r,o[n],h)}return o}async updateXCetusRewarderAndFee(e,s,t){const o=await this.calculateTotalPointsAfterMultiper(e,t);for(const i of s)await this.calculateXCetusRewarder(e,i,t.period,o);return s}async calculateXCetusRewarder(e,s,t,o){const i=await this.getPoolBonusInfo(e.rewarders.rewarder_handle,t),{fee_share_rate:n}=this.calculateFeeShareRate(e,s,o),r=c(n).mul(i.total_bonus);return s.is_redeemed?s.bonus_num="0":s.bonus_num=r.toString(),s.bonus_num}calculateFeeShareRate(e,s,t){const o=D.getBonusPercent(e.config,s.percent),i=c(s.point).mul(o),n=c(i).div(t);return s.point_after_multiplier=i.toString(),s.fee_share_rate=Number(n),{fee_share_rate:Number(n),points_after_multiper:i.toString()}}async calculateTotalPointsAfterMultiper(e,s){const t=await this.getPoolMarkerPositionList(e.whale_nfts.whale_nfts_handle,[s]);let o=c(0);const i=t[s.period];for(const n of i){const r=D.getBonusPercent(e.config,n.percent),a=c(n.point).mul(r);o=o.add(a)}return o.toString()}async calculateAllXCetusRewarder(e){const s=this._sdk.ClmmSDK.senderAddress;let t=c(0);const o=[];for(const i of e){const n=await this._sdk.MakerModule.getMakerPoolPeriods(i),r=await this._sdk.MakerModule.getPoolMarkerPositionList(i.whale_nfts.whale_nfts_handle,n),a=[];for(const l of n){const d=r[l.period].filter(u=>{var _;return s.length===0?!1:((_=u.clmm_position)==null?void 0:_.owner)===s});d.length>0&&(await this._sdk.MakerModule.updateXCetusRewarderAndFee(i,d,l),d.forEach(u=>{var _;((_=u.clmm_position)==null?void 0:_.position_status)===ce.Exists&&c(u.bonus_num).greaterThan(0)&&(t=t.add(u.bonus_num),a.includes(u.clmm_position.pos_object_id)||a.push(u.clmm_position.pos_object_id))}))}o.push({bonus_type:i.bonus_type,pool_id:i.pool_id,nft_ids:a})}return{claimtotal:t,claimRecord:o}}async getPoolBonusInfo(e,s,t=!1){const o=`${e}_${s}_getPoolBonusInfo`,i=this.getCache(o,t);if(i!==void 0)return i;const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"u64",value:s.toString()}}),r=g(n),a=D.buildPoolBonusInfo(r);return this.updateCache(o,a,$),a}claimPayload(e){const{maker_bonus:s,xcetus:t}=this.sdk.sdkOptions,o=new m;return o.moveCall({target:`${s.maker_router}::${W}::claim`,typeArguments:[e.bonus_type],arguments:[o.pure(s.config.maker_config_id),o.pure(e.market_pool_id),o.pure(e.position_nft_id),o.pure(e.phase),o.pure(t.config.lock_manager_id),o.pure(t.config.xcetus_manager_id),o.pure(e.ve_nft_id)]}),o}claimAllPayload(e){const{maker_bonus:s,xcetus:t}=this.sdk.sdkOptions,o=new m;return e.whale_nfts.forEach(i=>{i.nft_ids.forEach(n=>{o.moveCall({target:`${s.maker_router}::${W}::claim_all`,typeArguments:[i.bonus_type],arguments:[o.object(s.config.maker_config_id),o.object(i.pool_id),o.object(n),o.object(t.config.lock_manager_id),o.object(t.config.xcetus_manager_id),o.object(e.ve_nft_id)]})})}),o}updateCache(e,s,t=$){let o=this._cache[e];o?(o.overdueTime=S(t),o.value=s):o=new M(s,S(t)),this._cache[e]=o}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},O="router",V="router",R=24*3600,H=1e3,I=1e11,E=class{static buildVeNFTDividendInfo(e){const s={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(t=>{const o=[];t.fields.value.fields.contents.forEach(i=>{o.push({coin_type:p(i.fields.key.fields.name).source_address,amount:i.fields.value})}),s.rewards.push({period:Number(t.fields.key),rewards:o})}),s}static buildDividendManager(e){const s={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:!0};return e.bonus_types.forEach(t=>{s.bonus_types.push(p(t.fields.name).source_address)}),s}static buildLockCetus(e){const s=e.fields,t={id:s.id.id,type:p(e.type).source_address,locked_start_time:Number(s.locked_start_time),locked_until_time:Number(s.locked_until_time),cetus_amount:s.balance,xcetus_amount:"0",lock_day:0};return t.lock_day=(t.locked_until_time-t.locked_start_time)/R,t}static getAvailableXCetus(e,s){let t=c(0);return s.forEach(o=>{t=t.add(o.xcetus_amount)}),c(e.xcetus_balance).sub(t).toString()}static getWaitUnLockCetuss(e){return e.filter(s=>!E.isLocked(s))}static getLockingCetuss(e){return e.filter(s=>E.isLocked(s))}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static getNextStartTime(e){const s=Date.now()/1e3,{start_time:t,interval_day:o}=e,i=Math.ceil((s-t)/(o*R));return t+i*o*R}},he=class{constructor(e){k(this,"_sdk");k(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,s=!0){const{xcetus:t}=this.sdk.sdkOptions,o=`${e}_getLockUpManagerEvent`,i=this.getCache(o,s);if(i!==void 0)return i;let n;const r=`${t.xcetus_router}::xcetus::VeNFT`;return(await B(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:r}})).data.forEach(l=>{const d=p(N(l)).source_address;if(d===r&&l.data&&l.data.content){const{fields:u}=l.data.content;n={...de(l),id:u.id.id,index:u.index,type:d,xcetus_balance:u.xcetus_balance},this.updateCache(o,n,h)}}),n}async getOwnerLockCetuss(e){const{xcetus:s}=this.sdk.sdkOptions,t=[],o=`${s.xcetus_router}::lock_coin::LockedCoin<${this.buileCetusCoinType()}>`,i=await B(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0},filter:{StructType:o}});for(const n of i.data)if(p(N(n)).source_address===o&&n.data){const a=E.buildLockCetus(n.data.content);a.xcetus_amount=await this.getXCetusAmount(a.id),t.push(a)}return t}async getLockCetus(e){var t;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((t=s.data)!=null&&t.content){const o=E.buildLockCetus(s.data.content);return o.xcetus_amount=await this.getXCetusAmount(o.id),o}}async getOwnerCetusCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileCetusCoinType())}mintVeNFTPayload(){const{xcetus:e}=this.sdk.sdkOptions,s=new m;return s.moveCall({target:`${e.xcetus_router}::${O}::mint_venft`,typeArguments:[],arguments:[s.pure(e.config.xcetus_manager_id)]}),s}async convertPayload(e){const{xcetus:s}=this.sdk.sdkOptions,t=new m,o=this.buileCetusCoinType(),i=await j.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,t,BigInt(e.amount),o);return e.venft_id===void 0?t.moveCall({target:`${s.xcetus_router}::${O}::mint_and_convert`,typeArguments:[],arguments:[t.object(s.config.lock_manager_id),t.object(s.config.xcetus_manager_id),i,t.pure(e.amount)]}):t.moveCall({target:`${s.xcetus_router}::${O}::convert`,typeArguments:[],arguments:[t.object(s.config.lock_manager_id),t.object(s.config.xcetus_manager_id),i,t.pure(e.amount),t.pure(e.venft_id)]}),t}redeemLockPayload(e){const{xcetus:s}=this.sdk.sdkOptions,t=new m;return t.moveCall({target:`${s.xcetus_router}::${O}::redeem_lock`,typeArguments:[],arguments:[t.pure(s.config.lock_manager_id),t.pure(s.config.xcetus_manager_id),t.pure(e.venft_id),t.pure(e.amount),t.pure(e.lock_day),t.pure(f)]}),t}redeemPayload(e){const{xcetus:s}=this.sdk.sdkOptions,t=new m;return t.moveCall({target:`${s.xcetus_router}::${O}::redeem`,typeArguments:[],arguments:[t.pure(s.config.lock_manager_id),t.pure(s.config.xcetus_manager_id),t.pure(e.venft_id),t.pure(e.lock_id),t.pure(f)]}),t}redeemDividendPayload(e,s){const{xcetus:t}=this.sdk.sdkOptions,o=new m;return s.forEach(i=>{o.moveCall({target:`${t.dividends_router}::${V}::redeem`,typeArguments:[i],arguments:[o.object(t.config.dividend_manager_id),o.object(e)]})}),o}redeemDividendV2Payload(e,s){const{xcetus:t}=this.sdk.sdkOptions,o=new m;return s.forEach(i=>{o.moveCall({target:`${t.dividends_router}::${V}::redeem_v2`,typeArguments:[i],arguments:[o.object(t.config.dividend_manager_id),o.object(e),o.object(f)]})}),o}buileCetusCoinType(){return`${this.sdk.sdkOptions.xcetus.cetus_faucet}::cetus::CETUS`}cancelRedeemPayload(e){const{xcetus:s}=this.sdk.sdkOptions,t=new m;return t.moveCall({target:`${s.xcetus_router}::${O}::cancel_redeem_lock`,typeArguments:[],arguments:[t.pure(s.config.lock_manager_id),t.pure(s.config.xcetus_manager_id),t.pure(e.venft_id),t.pure(e.lock_id),t.pure(f)]}),t}async getInitFactoryEvent(){var n;const{xcetus_display:e}=this.sdk.sdkOptions.xcetus,s=`${e}_getInitFactoryEvent`,t=this.getCache(s);if(t!==void 0)return t;const o=(n=await C(this._sdk.ClmmSDK,{MoveEventType:`${e}::xcetus::InitEvent`}))==null?void 0:n.data,i={xcetus_manager_id:""};return o.length>0&&o.forEach(r=>{const a=r.parsedJson;a&&(i.xcetus_manager_id=a.xcetus_manager)}),this.updateCache(s,i,h),i}async getLockUpManagerEvent(){var n;const{xcetus_display:e}=this.sdk.sdkOptions.xcetus,s=`${e}_getLockUpManagerEvent`,t=this.getCache(s);if(t!==void 0)return t;const o=(n=await C(this._sdk.ClmmSDK,{MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:n.data,i={lock_manager_id:"",max_lock_day:0,max_percent_numerator:0,min_lock_day:0,min_percent_numerator:0,lock_handle_id:""};return o.length>0&&o.forEach(r=>{const a=r.parsedJson;a&&(i.lock_manager_id=a.lock_manager,i.max_lock_day=Number(a.max_lock_day),i.max_percent_numerator=Number(a.max_percent_numerator),i.min_lock_day=Number(a.min_lock_day),i.min_percent_numerator=Number(a.min_percent_numerator))}),i.lock_handle_id=await this.getLockInfoHandle(i.lock_manager_id),this.updateCache(s,i,h),i}async getLockInfoHandle(e){const s=`${e}_getLockInfoHandle`,t=this.getCache(s);if(t!==void 0)return t;let o="";const i=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),n=g(i);return n&&(o=n.lock_infos.fields.id.id,this.updateCache(s,o,h)),o}async getDividendConfigs(){var n;const{dividends_display:e}=this.sdk.sdkOptions.xcetus,s=`${e}_getDividendManagerEvent`,t=this.getCache(s);if(t!==void 0)return t;const o=(n=await C(this._sdk.ClmmSDK,{MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:n.data,i={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return o.length>0&&o.forEach(r=>{const a=r.parsedJson;a&&(i.dividend_manager_id=a.manager_id,i.dividend_admin_id=a.admin_id,i.dividend_settle_id=a.settle_id,this.updateCache(s,i,h))}),i}async getDividendManager(e=!1){const{dividend_manager_id:s}=this.sdk.sdkOptions.xcetus.config,t=`${s}_getDividendManager`,o=this.getCache(t,e);if(o!==void 0)return o;const i=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0}}),n=g(i),r=E.buildDividendManager(n);return this.updateCache(t,r,h),r}async getXcetusManager(){const{xcetus:e}=this.sdk.sdkOptions,s=await this._sdk.ClmmSDK.fullClient.getObject({id:e.config.xcetus_manager_id,options:{showContent:!0}}),t=g(s);return{id:t.id.id,index:Number(t.index),has_venft:{handle:t.has_venft.fields.id.id,size:t.has_venft.fields.size},nfts:{handle:t.nfts.fields.id.id,size:t.nfts.fields.size},total_locked:t.total_locked,treasury:t.treasury.fields.total_supply.fields.value}}async getVeNFTDividendInfo(e,s){try{const t=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:s}}),o=g(t);return E.buildVeNFTDividendInfo(o)}catch{return}}async redeemNum(e,s){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const t=await this.getLockUpManagerEvent();console.log("lockUpManager",t);const o=c(I).mul(c(t.max_lock_day).sub(c(s))).mul(c(t.max_percent_numerator).sub(c(t.min_percent_numerator))).div(c(t.max_lock_day).sub(c(t.min_lock_day))),i=c(I).mul(c(t.max_percent_numerator)).sub(o).div(c(H)).div(I);return{amountOut:c(i).mul(c(e)).round().toString(),percent:i.toString()}}async reverseRedeemNum(e,s){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const t=await this.getLockUpManagerEvent(),o=c(I).mul(c(t.max_lock_day).sub(c(s))).mul(c(t.max_percent_numerator).sub(c(t.min_percent_numerator))).div(c(t.max_lock_day).sub(c(t.min_lock_day))),i=c(I).mul(c(t.max_percent_numerator)).sub(o).div(c(H)).div(I);return{amountOut:c(e).div(i).toFixed(0,U.ROUND_UP),percent:i.toString()}}async getXCetusAmount(e){const{lock_handle_id:s}=this._sdk.sdkOptions.xcetus.config,t=`${e}_getXCetusAmount`,o=this.getCache(t);if(o!==void 0)return o;try{const i=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:s,name:{type:"0x2::object::ID",value:e}}),n=g(i);if(n){const{xcetus_amount:r}=n.value.fields.value.fields;return this.updateCache(t,r,h),r}}catch{}return"0"}async getVeNftAmount(e,s){try{const t=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:s}}),o=g(t);if(o){const{lock_amount:i,xcetus_amount:n}=o.value.fields.value.fields;return{lock_amount:i,xcetus_amount:n}}}catch{}return{lock_amount:"0",xcetus_amount:"0"}}updateCache(e,s,t=$){let o=this._cache[e];o?(o.overdueTime=S(t),o.value=s):o=new M(s,S(t)),this._cache[e]=o}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},ge=class{constructor(e,s){k(this,"_sdkOptions");k(this,"_launchpad");k(this,"_xcetusModule");k(this,"_boosterModule");k(this,"_makerModule");k(this,"_clmmSDK");this._sdkOptions=e,this._clmmSDK=s,this._launchpad=new _e(this),this._xcetusModule=new he(this),this._boosterModule=new ue(this),this._makerModule=new pe(this),ie(this._sdkOptions)}get ClmmSDK(){return this._clmmSDK}get sdkOptions(){return this._sdkOptions}get Launchpad(){return this._launchpad}get XCetusModule(){return this._xcetusModule}get BoosterModule(){return this._boosterModule}get MakerModule(){return this._makerModule}};export{ge as C,w as L,E as X};
