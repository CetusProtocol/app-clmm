import{C as f,I as w,a as K}from"./index.895f01be.js";import{v as C,u as W,ae as M,af as E}from"./pool.33284a08.js";import{c as i,a as j,u as J}from"./sha256.f705020f.js";import{a0 as q,m as g,O as G,a1 as F}from"./entry.1d7e403a.js";function p(o){const c={launchpad:i[o||"Sui"].launchpad,ido:i[o||"Sui"].ido,xcetus:i[o||"Sui"].xcetus,xcetus_dividends:i[o||"Sui"].xcetus_dividends,cetus_faucet:i[o||"Sui"].cetus_faucet,xtoken:i[o||"Sui"].xtoken,xtoken_dividends:i[o||"Sui"].xtoken_dividends,token_faucet:i[o||"Sui"].token_faucet,booster:i[o||"Sui"].booster,maker_bonus:i[o||"Sui"].maker_bonus},a={fullRpcUrl:localStorage.getItem(`${o}-currentRpclocalnew`)||i[o||"Sui"].fullRpcUrl,simulationAccount:i[o||"Sui"].simulationAccount,cetus_config:i[o||"Sui"].cetus_config,clmm_pool:i[o||"Sui"].clmm_pool,integrate:i[o||"Sui"].integrate,deepbook:i[o||"Sui"].deepbook,deepbook_endpoint_v2:i[o||"Sui"].deepbook_endpoint_v2,aggregatorUrl:i[o||"Sui"].aggregatorUrl},n=new C(a),s=q(new f(c,n)),l=new K(s),L=j(),m=g(()=>L);G(()=>{m.value.address&&(s.ClmmSDK.senderAddress=m.value.address)});const S=()=>{const t=new C(a);return new f(c,t)},_=t=>({transactionBlock:t,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}}),k=J();g(()=>k);const I=W(),A=g(()=>I),b=async t=>{t.setSenderIfNotSet(m.value.address);const e=await t.build({provider:s.ClmmSDK.fullClient});return await s.ClmmSDK.fullClient.dryRunTransactionBlock({transactionBlock:e})},T=async()=>await l.getPools(),D=async t=>await l.getPool(t),v=async(t,e)=>{const r=e||await l.getPools();return await l.getJoinPools(t,r)},x=async(t,e)=>(e||await l.getPools()).filter(u=>u.owner===E(t)),R=async t=>{const e=S();e.ClmmSDK.senderAddress=m.value.address;const r=await l.creatPurchasePayload(t.pool,t.amount);return _(r)},U=async t=>{const e=await l.creatRedeemPayload(t.pool);return _(e)},y=async t=>{if(t.pool_status!=="Settle")throw new Error("The pool is not in settle ");let e=null,r=!1;const u=await s.ClmmSDK.Pool.getPoolImmutables();for(const d of u){if(d.coinTypeA===t.coin_type_sale&&d.coinTypeB===t.coin_type_raise&&Number(d.tickSpacing)===t.tick_spacing){e=await s.ClmmSDK.Pool.getPool(d.poolAddress);break}if(d.coinTypeA===t.coin_type_raise&&d.coinTypeB===t.coin_type_sale&&Number(d.tickSpacing)===t.tick_spacing){e=await s.ClmmSDK.Pool.getPool(d.poolAddress),r=!0;break}}const P=await s.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t.coin_type_raise,t.coin_type_sale]),O=P[t.coin_type_sale].decimals,B=P[t.coin_type_raise].decimals;let h;if(t.liquidity_injection_ratio>0&&e===null)throw new Error("not found clmmPool ");if(e&&t.liquidity_injection_ratio>0)try{h=await s.Launchpad.creatSettlePayload({pool_address:t.pool_address,coin_type_sale:t.coin_type_sale,coin_type_raise:t.coin_type_raise,clmm_args:{current_price:t.current_price,clmm_pool_address:e.poolAddress,clmm_sqrt_price:e.current_sqrt_price.toString(),opposite:r,sale_decimals:O,raise_decimals:B}})}catch{}else h=await s.Launchpad.creatSettlePayload({pool_address:t.pool_address,coin_type_sale:t.coin_type_sale,coin_type_raise:t.coin_type_raise});return h};return{is_can_withdraw:async t=>w.is_can_withdraw(t),calculateRedeemAmount:async(t,e)=>w.calculateRedeemAmount(t,e),getPoolConfigs:async()=>await s.ClmmSDK.CetusConfig.getLaunchpadPoolConfigs(),getLockNFTList:async t=>{if(t.is_liquidity_injected)return await l.getLockNFTList(t)},beforeSettle:y,simulate:b,TickUtil:M,getCmmPoolAddress:async t=>{let e=null;const r=A.value.poolConfigList;for(const u of r){if(u.coinA.address===t.coin_type_sale&&u.coinB.address===t.coin_type_raise&&Number(u.tick_spacing)==Number(t.tick_spacing)){e=await s.ClmmSDK.Pool.getPool(u.address);break}if(u.coinA.address===t.coin_type_raise&&u.coinB.address===t.coin_type_sale&&Number(u.tick_spacing)==Number(t.tick_spacing)){e=await s.ClmmSDK.Pool.getPool(u.address);break}}return e||null},getLaunchpadAllPools:T,getLaunchpadPoolInfo:D,getJoinPools:v,getOwnerPools:x,getCreatPurchasePayload:R,getCreatClaimPayload:U,getCreatSettlePayload:async t=>{const e=await y(t);return _(e)},getCreatWithdrawParams:async t=>{const e=await l.creatWithdrawPayload(t);return _(e)},getIsWhiteListUser:async(t,e)=>await l.isWhiteListUser(e,t),getCreatUnlockNftPayload:async(t,e)=>{if(t.pool_status=="Ended"){if(e){const r={lock_nft:e.lock_nft_id,nft_type:t.version=="1"?e.nft_type:e.type},u=await l.unlockNftPayload(t,r);return _(u)}}else throw new Error("The pool is not in Ended  ")},getPurchaseMark:async(t,e)=>await l.getPurchaseInfo(t,e),getPurchaseAmountVal:async(t,e)=>await l.getwhiteProtectionInfo(t,e),calculateWithdrawAmount:async t=>await l.calculateWithdrawAmount(t),getCoinInfo:async(t,e)=>await s.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t,e])}}const rt=F("launchpad",{state:()=>({currentLaunchpadPoolInfo:{},launchpadAllPools:[],launchpadOwnerAllPools:[],launchpadJoinPools:[],haveLaunchpad:!1,launchpadPoolsLoading:!0,getOwnDateLoading:!0,ownIsWhiteList:!1,committedCoinAssetCount:"0",currentPoolNumData:{},idoPoolConfigInfo:{},purchaseMark:{},settlePayTokenAInfo:{},settlePayTokenBInfo:{},getPurchaseAmountLoading:!0,currentTab:"latest"}),actions:{async setSettlePayTokenAInfo(o){this.settlePayTokenAInfo=o},async setSettlePayTokenBInfo(o){this.settlePayTokenBInfo=o},async setGetPurchaseAmountLoading(o){this.getPurchaseAmountLoading=o},async setPurchaseMark(o){this.purchaseMark=o},async setGetOwnDateLoading(o){this.getOwnDateLoading=o},async setCurrentLaunchpadPoolInfo(o){this.currentLaunchpadPoolInfo=o},async setCurrentTab(o){this.currentTab=o},async setCurrentPoolNumData(o){this.currentPoolNumData=o},async setOwnIsWhiteList(o){this.ownIsWhiteList=o},async setMyCountCommittedCoinAsset(o){this.committedCoinAssetCount=o},async setLaunchpadPoolsLoading(o){this.launchpadPoolsLoading=o},async setLaunchpadAllPools(){this.launchpadAllPools=[],this.setLaunchpadPoolsLoading(!0);const c=await p("Sui").getLaunchpadAllPools()||[];this.launchpadAllPools=c.sort((a,n)=>n.duration_summary.end_time-a.duration_summary.end_time),this.setLaunchpadPoolsLoading(!1)},async setLaunchpadAllPoolsNoLoading(){const c=await p("Sui").getLaunchpadAllPools()||[];this.launchpadAllPools=c.sort((a,n)=>n.duration_summary.end_time-a.duration_summary.end_time)},async getCurrentLaunchpadPoolInfo(o){this.setGetPurchaseAmountLoading(!0);const c=p("Sui"),a=await c.getLaunchpadPoolInfo(o)||{},n=await c.getCoinInfo(a.coin_type_raise,a.coin_type_sale);this.currentLaunchpadPoolInfo={raiseCoinInfo:{logoURI:n[a.coin_type_raise].logo_url,...n[a.coin_type_raise]},saleCoinInfo:{logoURI:n[a.coin_type_sale].logo_url,...n[a.coin_type_sale]},...a},this.setGetOwnDateLoading(!1)},async getCurrentLaunchpadPoolInfoNoLoading(o){const c=p("Sui"),a=await c.getLaunchpadPoolInfo(o)||{},n=await c.getCoinInfo(a.coin_type_raise,a.coin_type_sale);this.currentLaunchpadPoolInfo={raiseCoinInfo:{logoURI:n[a.coin_type_raise].logo_url,...n[a.coin_type_raise]},saleCoinInfo:{logoURI:n[a.coin_type_sale].logo_url,...n[a.coin_type_sale]},...a}},async setLaunchpadJoinPools(o){this.setLaunchpadPoolsLoading(!0);const a=await p("Sui").getJoinPools(o)||[];a.length<1?this.setLaunchpadPoolsLoading(!1):(this.launchpadJoinPools=a.sort((n,s)=>s.duration_summary.end_time-n.duration_summary.end_time),this.setLaunchpadPoolsLoading(!1))},async setLaunchpadOwnerAllPools(o,c){const n=await p("Sui").getOwnerPools(o,c)||[];n.length<1?this.haveLaunchpad=!1:(this.launchpadOwnerAllPools=n.sort((s,l)=>l.duration_summary.end_time-s.duration_summary.end_time),this.haveLaunchpad=!0)},async getIdoPoolConfigInfo(){const c=await p("Sui").getPoolConfigs(),a={};c.map((n,s)=>{a[n.pool_address]=n}),this.idoPoolConfigInfo=a||{}}}});export{p as a,rt as u};
