var he=Object.defineProperty;var ge=(e,s,t)=>s in e?he(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t;var b=(e,s,t)=>(ge(e,typeof s!="symbol"?s+"":s,t),t);import{af as fe,ag as P,ah as F,ai as g,aj as J,ak as d,al as N,am as k,an as w,ao as U,F as m,ap as K,aq as r,ar as p,as as h,at as L,au as z,av as V,f as Y,aw as ce,ax as te,ay as A,az as j,T as H,aA as se,aB as Z,aC as ee,aD as ke,D as O,aE as ye,aF as re,aG as de,aH as ie,aI as be,aJ as ve,aK as Ce}from"./pool.1fd34997.js";var Q="router",q=1e4,I=class{static buildPoolImmutables(e){const{fields:s}=e.value.fields.value;return{clmm_pool_id:m(s.clmm_pool_id).address,booster_type:m(s.booster_type.fields.name).source_address,pool_id:m(s.pool_id).address,coinTypeA:m(s.coin_type_a.fields.name).source_address,coinTypeB:m(s.coin_type_b.fields.name).source_address}}static buildPoolState(e){const s=k(e),t=[];return s.config.fields.contents.forEach(n=>{t.push({lock_day:Number(n.fields.key),multiplier:Number(r(n.fields.value).div(q))})}),{basic_percent:Number(r(s.basic_percent).div(q)),balances:{balances_handle:s.balances.fields.id.id,size:s.balances.fields.size},config:t,lock_positions:{lock_positions_handle:s.lock_positions.fields.id.id,size:s.lock_positions.fields.size},is_open:s.is_open,index:Number(s.index),pool_id:V(e)}}static buildLockNFT(e){const s=m(V(e)).address;return{lock_clmm_position:te(e),locked_nft_id:s}}static buildLockPositionInfo(e){const s=k(e),{value:t}=s.value.fields;return{type:t.type,position_id:t.fields.position_id,start_time:Number(t.fields.start_time),lock_period:Number(t.fields.lock_period),end_time:Number(t.fields.end_time),growth_rewarder:t.fields.growth_rewarder,rewarder_owned:t.fields.rewarder_owned,is_settled:t.fields.is_settled}}static isLocked(e){return e.end_time>Date.parse(new Date().toString())/1e3}},we=class{constructor(e){b(this,"_sdk");b(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var o;const{booster:s}=this._sdk.sdkOptions,t=`${s.package_id}_getPoolImmutables`,i=this.getCache(t,e),n=[];if(i!==void 0)n.push(...i);else{const a=[];(o=(await J(this._sdk.ClmmSDK,d(s).booster_pool_handle)).data)==null||o.forEach(u=>{a.push(u.objectId)});const l=await N(this._sdk.ClmmSDK,a,{showContent:!0});for(const u of l){const _=k(u);if(_){const f=I.buildPoolImmutables(_);this.updateCache(`${f.pool_id}_getPoolImmutable`,f,g),n.push(f)}}}return this.updateCache(t,n,g),n}async getPoolImmutable(e){const{booster:s}=this._sdk.sdkOptions,t=`${e}_getPoolImmutable`,i=this.getCache(t);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:d(s).booster_pool_handle,name:{type:"0x2::object::ID",value:e}}),o=k(n),a=I.buildPoolImmutables(o);return this.updateCache(t,a,g),a}async getPools(){const e=[],t=(await this.getPoolImmutables()).map(n=>n.pool_id),i=await N(this._sdk.ClmmSDK,t,{showType:!0,showContent:!0});for(const n of i){const o=I.buildPoolState(n);if(o){const a={...await this.getPoolImmutable(o.pool_id),...o};e.push(a);const c=`${a.pool_id}_getPoolObject`;this.updateCache(c,a,g)}}return e}async getPool(e,s=!0){const t=`${e}_getPoolObject`,i=this.getCache(t,s),n=await this.getPoolImmutable(e);if(i!==void 0)return{...n,...i};const o=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),a=I.buildPoolState(o),c={...n,...a};return this.updateCache(t,c,g),c}async getPoolHandleId(e){const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),t=k(s);return t?t.list.fields.id.id:""}async getBoosterInitConfigs(){var i;const{package_id:e}=this.sdk.sdkOptions.booster,s=(i=await w(this._sdk.ClmmSDK,{MoveEventType:`${e}::config::InitEvent`}))==null?void 0:i.data,t={booster_config_id:"",booster_pool_handle:""};return s.length>0&&s.forEach(n=>{const o=n.parsedJson;o&&(t.booster_config_id=o.config_id)}),t.booster_pool_handle=await this.getPoolHandleId(t.booster_config_id),t}async getOwnerBoosterPositions(e,s,t){const{booster:i}=this.sdk.sdkOptions,n=[],o=[],a=`${i.package_id}::lock_nft::LockNFT<${this._sdk.ClmmSDK.Position.buildPositionType()}>`,c=await U(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0,showOwner:!0},filter:{StructType:a}});for(const u of c.data)if(m(K(u)).source_address===a&&u.data){const f=I.buildLockNFT(u);this.updateCache(`${f.locked_nft_id}_getBoosterPositionById`,f,g),f&&(s===void 0||s===f.lock_clmm_position.pool)&&n.push(f)}const l=await this.getLockPositionInfos(t,n.map(u=>u.locked_nft_id));for(const u of n)for(const _ of l)if(u.lock_clmm_position.pos_object_id===_.position_id){o.push({...u,..._});break}return o}async getBoosterPosition(e,s){const t=`${s}_getBoosterPositionById`,i=this.getCache(t);let n;if(i!==void 0)n=i;else{const a=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0,showOwner:!0}});n=I.buildLockNFT(a),this.updateCache(t,n,g)}const o=await this.getLockPositionInfo(e,s);return{...n,...o}}async getLockPositionInfos(e,s=[]){var o;const t=await J(this._sdk.ClmmSDK,e),i=[],n=[];return(o=t.data)==null||o.forEach(a=>{s.length>0?s.includes(a.name.value)&&i.push(a.objectId):i.push(a.objectId)}),i.length>0&&(await N(this._sdk.ClmmSDK,i,{showContent:!0})).forEach(c=>{const l=I.buildLockPositionInfo(c);l&&n.push(l)}),n}async getLockPositionInfo(e,s){const t=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:s}});return I.buildLockPositionInfo(t)}calculateXCetusRewarder(e,s,t){let i=s.basic_percent,n="0";e.forEach(c=>{c.coin_address===s.booster_type&&(console.log("find ",s.booster_type),n=c.amount_owed.toString())}),t.is_settled||s.config.forEach(c=>{c.lock_day===t.lock_period&&(i=c.multiplier)});const o=r(n).sub(t.growth_rewarder).mul(i);return r(t.rewarder_owned).add(o).toString()}lockPositionPayload(e){const{booster:s}=this.sdk.sdkOptions,{clmm_pool:t}=this.sdk.ClmmSDK.sdkOptions,i=new p;return i.moveCall({target:`${s.published_at}::${Q}::lock_position`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[i.pure(d(s).booster_config_id),i.pure(d(t).global_config_id),i.pure(e.booster_pool_id),i.pure(e.clmm_pool_id),i.pure(e.clmm_position_id),i.pure(e.lock_day),i.pure(h)]}),i}canceLockPositionPayload(e){const{booster:s}=this.sdk.sdkOptions,t=new p;return t.moveCall({target:`${s.published_at}::${Q}::cancel_lock`,typeArguments:[e.booster_type],arguments:[t.pure(d(s).booster_config_id),t.pure(e.booster_pool_id),t.pure(e.lock_nft_id),t.pure(h)]}),t}redeemPayload(e){const{booster:s,xcetus:t}=this.sdk.sdkOptions,{clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,n=new p,o=d(t);return n.moveCall({target:`${s.published_at}::${Q}::redeem`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[n.pure(d(s).booster_config_id),n.pure(d(i).global_config_id),n.pure(e.booster_pool_id),n.pure(e.lock_nft_id),n.pure(e.clmm_pool_id),n.pure(o.lock_manager_id),n.pure(o.xcetus_manager_id),n.pure(e.ve_nft_id),n.pure(h)]}),n}updateCache(e,s,t=L){let i=this._cache[e];i?(i.overdueTime=P(t),i.value=s):i=new F(s,P(t)),this._cache[e]=i}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},D="router",le=1e9,T=class{static priceRealToFix(e,s,t){const i=r(s-t).toNumber();return Number(r(e).div(r(10).pow(r(i))).toString())}static priceFixToReal(e,s,t){const i=r(s-t).toNumber();return Number(r(e).mul(r(10).pow(r(i))).toString())}static raiseTotalAmount(e,s,t){const i=r(s-t).abs().toNumber();return s>t?Number(r(e.total_supply).mul(e.current_price).div(r(10).pow(r(i))).toString()):Number(r(e.total_supply).mul(e.current_price).mul(r(10).pow(r(i))).toString())}static buildLaunchPadPool(e){const s=K(e),t=m(s),i=k(e),n={coin_type_sale:t.type_arguments[0],coin_type_raise:t.type_arguments[1],pool_address:z(V(e)),is_settle:i.is_settle,current_price:r(i.initialize_price).div(r(le)).toString(),price:i.initialize_price,min_price:"0",max_price:"0",sale_coin_amount:i.sale_coin,raise_coin_amount:i.raise_coin,total_purchase_amount:i.reality_raise_total,total_supply:i.sale_total,min_purchase:i.min_purchase,max_purchase:i.max_purchase,complete_raise_limit:i.least_raise_amount,softcap:i.softcap,max_raise_amount:i.hardcap,sale_decimals:0,raise_decimals:0,liquidity_injection_ratio:Number(i.liquidity_rate)/1e4,is_cancel:i.is_cancel,duration_summary:{start_time:Number(i.duration_manager.fields.start_time),end_time:0,settle_end_time:0,purchase_duration:Number(i.duration_manager.fields.activity_duration),settle_duration:Number(i.duration_manager.fields.settle_duration),lock_up_duration:Number(i.duration_manager.fields.locked_duration)},white_summary:{white_handle:i.white_list.fields.users.fields.id.id,protection_hard_cap:i.white_list.fields.hard_cap_total,protection_limit_used:i.white_list.fields.purchase_total,size:Number(i.white_list.fields.users.fields.size)},unused_sale:i.unused_sale,harvest_raise:i.harvest_raise,tick_spacing:Number(i.tick_spacing),owner:i.recipient,purchase_summary:{purchase_handle:i.purchase_list.fields.id.id,size:Number(i.purchase_list.fields.size)},pool_status:"Failed"};return T.updatePoolStatus(n),n}static updatePoolStatus(e){const s=Number(r(Date.now()/1e3).toFixed(0)),{duration_summary:t}=e,i=t.start_time+t.purchase_duration,n=i+t.settle_duration;if(t.end_time=i,t.settle_end_time=n,e.is_settle)e.pool_status="Ended";else if(e.is_cancel)e.pool_status="Canceled";else if(s<t.start_time)e.pool_status="Upcoming";else if(s>t.start_time&&s<i)e.pool_status="Live";else if(s>i&&s<n){const o=e.raise_coin_amount;Number(o)<Number(e.complete_raise_limit)?e.pool_status="Failed":e.pool_status="Settle"}return e}static async calculatePoolPrice(e,s){const t=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([s.coin_type_sale,s.coin_type_raise]),i=t[s.coin_type_sale].decimals,n=t[s.coin_type_raise].decimals;s.min_price=this.priceFixToReal(Number(r(s.softcap).div(r(s.total_supply))),i,n).toString(),s.max_price=this.priceFixToReal(Number(r(s.max_raise_amount).div(r(s.total_supply))),i,n).toString(),s.current_price=this.priceFixToReal(Number(s.current_price),i,n).toString(),s.sale_decimals=i,s.raise_decimals=n}static async getWithdrawRaise(e){return e.pool_status==="Ended"?e.harvest_raise:"0"}static async getWithdrawSale(e){return e.pool_status==="Ended"?e.unused_sale:e.sale_coin_amount}static async getHistoryWithdrawRaise(e,s){if(s.pool_status==="Ended"){if(r(s.harvest_raise).equals(r(0))){const i=await e.Launchpad.getSettleEvent(s.pool_address);i&&(s.harvest_raise=i.unused_raise)}const t=Y.min(new Y(s.total_purchase_amount),new Y(s.max_raise_amount));return r(t.toString()).mul(1-s.liquidity_injection_ratio).toString()}return"0"}static async getHistoryWithdrawSale(e,s){if(s.pool_status==="Ended"){const t=await e.Launchpad.getSettleEvent(s.pool_address);return t&&(s.unused_sale=t.unused_sale),s.unused_sale}return"0"}static async getOverrecruitReverseAmount(e,s){const t=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[s.pool_address],!1);if(t.length>0){const i=t[0].purchased_raise_amount,n=(await e.Launchpad.getPurchaseAmount(s.white_summary.white_handle,e.ClmmSDK.senderAddress)).safe_purchased_amount,{protection_limit_used:o}=s.white_summary;return r(i).sub(n).div(r(s.total_purchase_amount).sub(o)).mul(r(s.total_purchase_amount).sub(s.max_raise_amount)).toString()}return"0"}static async getCanPurchaseAmount(e,s){const t=await T.getOverrecruitReverseAmount(e,s),i=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[s.pool_address],!1);if(i){const n=i[0].purchased_raise_amount;r(n).sub(t).div(s.current_price)}return"0"}},De=class{constructor(e){b(this,"_sdk");b(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=[],s=0,t=100,i=!1){var _;const{package_id:n}=this._sdk.sdkOptions.launchpad;if(n===void 0)throw Error("sdk.sdkOptions.launchpad is undefined");const o=`${n}_getPoolImmutables`,a=this.getCache(o,i),c=[],l=[];if(a!==void 0&&c.push(...a),c.length===0)try{((_=await w(this._sdk.ClmmSDK,{MoveEventType:`${n}::factory::CreatePoolEvent`}))==null?void 0:_.data).forEach(v=>{const y=v.parsedJson;y&&c.push({pool_address:y.pool_id,coin_type_sale:m(y.sale_coin.name).full_address,coin_type_raise:m(y.raise_coin.name).full_address})}),this.updateCache(o,c,g)}catch(f){console.log("getPoolImmutables",f)}const u=e.length>0;for(let f=0;f<c.length;f+=1){const v=c[f];if(!(u&&!e.includes(v.pool_address))){if(!u){const y=f;if(y<s||y>=s+t)continue}l.push(v)}}return l}async getPoolImmutablesWithPage(e="all",s=!1){const{package_id:t}=this._sdk.sdkOptions.launchpad,i=`${t}_getPoolImmutables`,n=[],o={data:[],hasNextPage:!1},a=e==="all";if(a){const c=this.getCache(i,s);c&&n.push(...c)}if(n.length===0)try{const c=await w(this._sdk.ClmmSDK,{MoveEventType:`${t}::factory::CreatePoolEvent`},e);o.hasNextPage=c.hasNextPage,o.nextCursor=c.nextCursor,c.data.forEach(l=>{const u=l.parsedJson;u&&n.push({pool_address:u.pool_id,coin_type_sale:m(u.sale_coin.name).full_address,coin_type_raise:m(u.raise_coin.name).full_address})})}catch(c){console.log("getPoolImmutables",c)}return o.data=n,a&&this.updateCache(i,n,g),o}async getPools(e=[],s=0,t=100){const i=[];let n=[];e.length>0?n=[...e]:(await this.getPoolImmutables([],s,t,!1)).forEach(c=>{n.push(c.pool_address)});const o=await N(this.sdk.ClmmSDK,n,{showType:!0,showContent:!0});for(const a of o){const c=T.buildLaunchPadPool(a);await T.calculatePoolPrice(this._sdk,c),i.push(c);const l=`${c.pool_address}_getPoolObject`;this.updateCache(l,c,g)}return i}async getPool(e,s=!0){const t=`${e}_getPoolObject`,i=this.getCache(t,s);if(i!==void 0){const a=i;return T.updatePoolStatus(a),a}const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=T.buildLaunchPadPool(n);return await T.calculatePoolPrice(this._sdk,o),this.updateCache(t,o),o}async getInitConfig(e=!1){var l;const s=this._sdk.sdkOptions.launchpad.package_id,t=`${s}_getInitEvent`,i=this.getCache(t,e);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showPreviousTransaction:!0}}),o=ce(n),a=(l=await w(this._sdk.ClmmSDK,{Transaction:o}))==null?void 0:l.data,c={pools_id:"",admin_cap_id:"",config_cap_id:""};return a.length>0&&(a.forEach(u=>{const _=u.parsedJson;if(_)switch(m(u.type).full_address){case`${s}::config::InitConfigEvent`:c.admin_cap_id=_.admin_cap_id,c.config_cap_id=_.config_cap_id;break;case`${s}::factory::InitFactoryEvent`:c.pools_id=_.pools_id;break}}),this.updateCache(t,c,g)),c}async getLockNFT(e,s=!1){const t=`${e}_getLockNFT`,i=this.getCache(t,s);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!n.error)return te(n)}async getLockNFTList(e){var n;const{package_id:s}=this._sdk.ClmmSDK.sdkOptions.clmm_pool,{sdkOptions:t}=this._sdk,i=[];try{const o=(n=await w(this._sdk.ClmmSDK,{MoveEventType:`${t.launchpad.package_id}::lock::LockNFTEvent`}))==null?void 0:n.data;for(const a of o){const c=a.parsedJson;if(c){const l={locked_time:Number(c.locked_time),end_lock_time:Number(c.end_lock_time),nft_type:c.nft_type_name.name,lock_nft_id:c.lock_nft_id,recipient:c.recipient};if(e===l.recipient&&`${s}`===m(l.nft_type).address){const u=await this.getLockNFT(l.lock_nft_id);if(u){const _=m(u.coin_type_a).full_address,f=m(u.coin_type_b).full_address;i.push({...u,coin_type_a:_,coin_type_b:f,...l})}}}}return i}catch(o){return console.log("getLockNFTList:",o),[]}}async creatPoolTransactionPayload(e){const{launchpad:s}=this.sdk.sdkOptions,t=d(s);if(this.assertLuanchpadConfig(),this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const i=T.priceRealToFix(Number(e.initialize_price),e.sale_decimals,e.raise_decimals),n=new p,o=r(e.total_supply).add(r(e.total_supply).mul(r(e.liquidity_rate))).toNumber(),a=await A.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,n,BigInt(o),e.coin_type_sale),c=[n.pure(t.admin_cap_id),n.pure(t.config_cap_id),n.pure(t.pools_id),n.pure(j(e.recipient)),n.pure((i*le).toString()),a,n.pure(e.total_supply.toString()),n.pure(e.min_purchase.toString()),n.pure(e.max_purchase.toString()),n.pure(e.least_raise_amount.toString()),n.pure(e.hardcap.toString()),n.pure((e.liquidity_rate*1e3).toString()),n.pure(e.start_time.toString()),n.pure(e.activity_duration.toString()),n.pure(e.settle_duration.toString()),n.pure(e.locked_duration.toString()),n.pure(e.tick_spacing.toString()),n.pure(h)],l=[e.coin_type_sale,e.coin_type_raise];return n.moveCall({target:`${s.published_at}::${D}::create_launch_pool`,typeArguments:l,arguments:c}),n}async creatPurchasePayload(e){const{launchpad:s}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const t=new p,i=await A.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,t,BigInt(e.purchase_amount),e.coin_type_raise),n=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],o=[e.coin_type_sale,e.coin_type_raise];let a;return n?a=[t.pure(e.pool_address),t.pure(d(s).config_cap_id),t.pure(n.id),i,t.pure(e.purchase_amount.toString()),t.pure(h)]:a=[t.pure(e.pool_address),t.pure(d(s).config_cap_id),i,t.pure(e.purchase_amount.toString()),t.pure(h)],t.moveCall({target:`${s.published_at}::${D}::${n===void 0?"create_and_purchase":"purchase"}`,typeArguments:o,arguments:a}),t}async creatClaimPayload(e){const{launchpad:s}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const t=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],i=new p,n=[e.coin_type_sale,e.coin_type_raise],o=[i.pure(e.pool_address),i.pure(d(s).config_cap_id),i.pure(t==null?void 0:t.id),i.pure(h)];return i.moveCall({target:`${s.published_at}::${D}::claim`,typeArguments:n,arguments:o}),i}async creatSettlePayload(e){var c;const{launchpad:s}=this.sdk.sdkOptions,{clmm_pool:t}=this.sdk.ClmmSDK.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");this.assertLuanchpadConfig();const i=d(t),{clmm_args:n}=e,o=new p;o.setSender(this.sdk.ClmmSDK.senderAddress);const a=[e.coin_type_sale,e.coin_type_raise];if(n){const l=n.opposite?H.priceToSqrtPriceX64(r(1).div(n.current_price),n.raise_decimals,n.sale_decimals).toString():H.priceToSqrtPriceX64(r(n.current_price),n.sale_decimals,n.raise_decimals).toString(),u=BigInt(l)<BigInt(n.clmm_sqrt_price),_=n.opposite?u?e.coin_type_raise:e.coin_type_sale:u?e.coin_type_sale:e.coin_type_raise,f=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,_);let v=se.calculateTotalBalance(f);se.isSuiCoin(_)&&(v-=BigInt(2e8));const _e=(c=A.buildCoinInputForAmount(o,f,v,_))==null?void 0:c.transactionArgument,pe=n.opposite?u?"settle_with_reverse_clmm_only_with_a":"settle_with_reverse_clmm_only_with_b":u?"settle_only_with_a":"settle_only_with_b",me=[o.pure(e.pool_address),o.pure(d(s).config_cap_id),o.pure(n.clmm_pool_address),o.pure(i.global_config_id),o.pure(l),_e,o.pure(h)];o.moveCall({target:`${s.published_at}::${D}::${pe}`,typeArguments:a,arguments:me})}else o.moveCall({target:`${s.published_at}::${D}::settle`,typeArguments:a,arguments:[o.pure(e.pool_address),o.pure(d(s).config_cap_id),o.pure(h)]});return o}creatWithdrawPayload(e){const{launchpad:s}=this.sdk.sdkOptions,t=new p,i=[e.coin_type_sale,e.coin_type_raise],n=[t.object(e.pool_address),t.object(d(s).config_cap_id),t.object(h)];return e.sale_amount>BigInt(0)&&t.moveCall({target:`${s.published_at}::${D}::withdraw_sale`,typeArguments:i,arguments:n}),e.raise_amount>BigInt(0)&&t.moveCall({target:`${s.published_at}::${D}::withdraw_raise`,typeArguments:i,arguments:n}),t}addUserToWhitelisPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new p,i=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(n=>{const o=[t.object(d(s).admin_cap_id),t.object(d(s).config_cap_id),t.object(e.pool_address),t.object(n),t.pure(e.safe_limit_amount),t.object(h)];t.moveCall({target:`${s.published_at}::${D}::add_user_to_whitelist`,typeArguments:i,arguments:o})}),t}updateWhitelistCapPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new p,i=[e.coin_type_sale,e.coin_type_raise];return e.safe_limit_amount>0&&t.moveCall({target:`${s.published_at}::${D}::update_whitelist_member_safe_limit_amount`,typeArguments:i,arguments:[t.object(d(s).admin_cap_id),t.object(d(s).config_cap_id),t.object(e.pool_address),t.pure(e.white_list_member),t.pure(e.safe_limit_amount),t.object(h)]}),e.hard_cap_total>0&&t.moveCall({target:`${s.published_at}::${D}::update_whitelist_hard_cap_total`,typeArguments:i,arguments:[t.object(d(s).admin_cap_id),t.object(d(s).config_cap_id),t.object(e.pool_address),t.pure(e.hard_cap_total),t.object(h)]}),t}creatRemoveWhitelistPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new p,i=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(n=>{const o=[t.object(d(s).admin_cap_id),t.object(d(s).config_cap_id),t.object(e.pool_address),t.object(n),t.object(h)];t.moveCall({target:`${s.published_at}::${D}::remove_user_from_whitelist`,typeArguments:i,arguments:o})}),t}creatCancelPoolPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new p,i=[e.coin_type_sale,e.coin_type_raise],n=[t.pure(d(s).admin_cap_id),t.pure(d(s).config_cap_id),t.pure(e.pool_address),t.pure(h)];return t.moveCall({target:`${s.published_at}::${D}::cancel`,typeArguments:i,arguments:n}),t}updateRecipientPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new p,i=[e.coin_type_sale,e.coin_type_raise],n=[t.pure(d(s).admin_cap_id),t.pure(d(s).config_cap_id),t.pure(e.pool_address),t.pure(e.new_recipient),t.pure(h)];return t.moveCall({target:`${s.published_at}::${D}::update_recipient_address`,typeArguments:i,arguments:n}),t}updatePoolDuractionPayload(e){const{launchpad:s}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const t=new p,i=[e.coin_type_sale,e.coin_type_raise],n=[t.pure(d(s).admin_cap_id),t.pure(d(s).config_cap_id),t.pure(e.pool_address),t.pure(e.activity_duration),t.pure(e.settle_duration),t.pure(e.lock_duration),t.pure(h)];return t.moveCall({target:`${s.published_at}::${D}::update_pool_duration`,typeArguments:i,arguments:n}),t}creatUnlockNftPayload(e){const{launchpad:s}=this.sdk.sdkOptions;if(d(s)===void 0)throw Error("getPackagerConfigs(launchpad)  is null");const t=new p,i=[e.nft_type],n=[t.pure(e.lock_nft),t.pure(h)];return t.moveCall({target:`${s.published_at}::lock::unlock_nft`,typeArguments:i,arguments:n}),t}async isAdminCap(e){const{launchpad:s}=this._sdk.sdkOptions;if(d(s)===void 0)throw Error("launchpad config is empty");const t=`${e}_isAdminCap`,i=this.getCache(t);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:d(s).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(n);const o=Z(n),a=ee(n);let c=!1;return a&&o&&m(o).source_address===`${s.package_id}::config::AdminCap`&&(c=j(a.AddressOwner)===j(e)),this.updateCache(t,c,g),c}async isWhiteListUser(e,s){const t={type:"address",value:s};try{const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:t});return!!(i&&i.data)}catch{return!1}}async getPurchaseAmount(e,s){var i;const t={type:"address",value:s};try{const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:t}),o=k(n);if(console.log(o),o)return(i=o==null?void 0:o.value)==null?void 0:i.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getPurchaseMarks(e,s=[],t=!0){const{launchpad:i}=this._sdk.sdkOptions,n=`${s}_getPurchaseMark`,o=this.getCache(n,t);if(!t&&o!==void 0)return o;let a=null;const c=[];for(;;){const l=await this._sdk.ClmmSDK.fullClient.getOwnedObjects({owner:e,options:{showType:!0,showContent:!0,showDisplay:!0},cursor:a});for(const u of l.data){const{fields:_}=u.data.content;if(m(K(u)).source_address===`${i.package_id}::pool::PurchaseMark`){console.log("fields: ",_);const v={id:_.id.id,pool_id:m(_.pool_id).address,purchased_raise_amount:_.purchase_total,obtain_sale_amount:_.obtain_sale_amount,used_raise_amount:_.used_raise_amount};s.length>0?s.includes(v.pool_id)&&c.push(v):c.push(v)}}if(l.hasNextPage)a=l.nextCursor;else break}return this.updateCache(n,c,g),c}async getSettleEvent(e){const{launchpad:s}=this._sdk.sdkOptions,t=`${e}_getPurchaseMark`,i=this.getCache(t);if(i!==void 0)return i;const n=await w(this._sdk.ClmmSDK,{MoveEventType:`${s.package_id}::pool::SettleEvent`});for(const o of n.data){const a=o.parsedJson;if(e===z(a.pool_id)){const c={pool_id:a.pool_id,settle_price:a.settle_price,unused_sale:a.unused_sale,unused_raise:a.unused_raise,white_purchase_total:a.white_purchase_total};return this.updateCache(t,c,g),c}}}buildLaunchpadCoinType(e,s){return ke(this._sdk.sdkOptions.launchpad.package_id,"pool",Ce,[e,s])}assertLuanchpadConfig(){const{launchpad:e}=this.sdk.sdkOptions;if(d(e)===void 0)throw Error("sdk getPackagerConfigs(launchpad) is null")}updateCache(e,s,t=L){let i=this._cache[e];i?(i.overdueTime=P(t),i.value=s):i=new F(s,P(t)),this._cache[e]=i}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},$=class{static buildPoolImmutables(e){const{fields:s}=e.value.fields.value;return{clmm_pool_id:m(s.clmm_pool_id).address,bonus_type:m(s.bonus_type.fields.name).source_address,pool_id:m(s.pool_id).address,coinTypeA:m(s.coin_type_a.fields.name).source_address,coinTypeB:m(s.coin_type_b.fields.name).source_address}}static buildPoolState(e){const s=k(e),t=[];return s.config.fields.contents.forEach(n=>{t.push({rate:Number(r(n.fields.key).div(q)),multiplier:Number(r(n.fields.value).div(q))})}),{balance:s.balance,config:t,is_open:s.is_open,index:Number(s.index),start_time:Number(s.start_time),interval_day:Number(s.interval_day),minimum_percent_to_reward:Number(r(s.minimum_percent_to_reward).div(q)),rewarders:{rewarder_handle:s.rewarders.fields.id.id,size:Number(s.rewarders.fields.size)},whale_nfts:{whale_nfts_handle:s.whale_nfts.fields.id.id,size:Number(s.whale_nfts.fields.size)},points:{point_handle:s.points.fields.id.id,size:Number(s.points.fields.size)}}}static buildMarkerPositions(e){const{contents:s}=e.value.fields.value.fields,t=[],i=e.id.id;return s.forEach(n=>{const{key:o,value:a}=n.fields,c={id:o,period_id:i,bonus_num:a.fields.bonus_num,point:a.fields.point,is_burn:a.fields.is_burn,point_after_multiplier:a.fields.point_after_multiplier,percent:Number(r(a.fields.percent).div(q)),fee_share_rate:0,is_redeemed:a.fields.is_redeemed};t.push(c)}),t}static buildPoolBonusInfo(e){const{fields:s,type:t}=e.value.fields.value;return{type:t,time:Number(s.time),settle_time:Number(s.settle_time),settled_num:s.settled_num,is_settled:s.is_settled,basis_bonus:s.basis_bonus,total_bonus:s.total_bonus,is_vacant:s.is_vacant,redeemed_num:s.redeemed_num}}static getBonusPercent(e,s){let t=0;for(const i of e)s>=i.rate&&i.rate>t&&(t=i.multiplier);return t}},ne="router",Pe=class{constructor(e){b(this,"_sdk");b(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var o;const{maker_bonus:s}=this._sdk.sdkOptions,t=`${s.package_id}_getPoolImmutables`,i=this.getCache(t,e),n=[];if(i!==void 0)n.push(...i);else{const a=[];(o=(await J(this._sdk.ClmmSDK,d(s).maker_pool_handle)).data)==null||o.forEach(u=>{a.push(u.objectId)});const l=await N(this._sdk.ClmmSDK,a,{showContent:!0});for(const u of l){const _=k(u);_&&n.push($.buildPoolImmutables(_))}}return n}async getPoolImmutable(e){const{maker_bonus:s}=this._sdk.sdkOptions,t=`${s.package_id}_getPoolImmutables`,i=this.getCache(t);if(i!==void 0){const a=i.filter(c=>e===c.pool_id);if(a.length>0)return a[0]}const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:d(s).maker_pool_handle,name:{type:"0x2::object::ID",value:e}}),o=k(n);return $.buildPoolImmutables(o)}async getPools(){const e=[],s=await this.getPoolImmutables(),t=s.map(o=>o.pool_id),i=await N(this._sdk.ClmmSDK,t,{showType:!0,showContent:!0});let n=0;for(const o of i){const a=$.buildPoolState(o);if(a){const c={...s[n],...a};e.push(c);const l=`${c.pool_id}_getPoolObject`;this.updateCache(l,c,g)}n+=1}return e}async getPool(e,s=!0){const t=`${e}_getPoolObject`,i=this.getCache(t,s),n=await this.getPoolImmutable(e);if(i!==void 0)return i;const o=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),a=$.buildPoolState(o),c={...n,...a};return this.updateCache(t,c,g),c}async getPoolHandleId(e){const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),t=k(s);return t?t.list.fields.id.id:""}async getMakerPoolPeriods(e,s=!1){const t=[],i=`${e.pool_id}_getMakerPoolPeriods`,n=this.getCache(i,s);return n!==void 0?n:((await J(this._sdk.ClmmSDK,e.whale_nfts.whale_nfts_handle)).data.forEach(a=>{const c={id:a.objectId,start_time:0,end_time:0,period:Number(a.name.value)};c.start_time=Number(r(e.start_time).add(r(e.interval_day).mul(24*3600).mul(c.period)).toFixed(0,O.ROUND_DOWN)),c.end_time=Number(r(c.start_time).add(r(e.interval_day).mul(24*3600)).toFixed(0,O.ROUND_DOWN)),t.push(c)}),this.updateCache(i,t,g),t)}async getMakerBonusInitConfigs(){var i;const{package_id:e}=this.sdk.sdkOptions.maker_bonus,s=(i=await w(this._sdk.ClmmSDK,{MoveEventType:`${e}::config::InitEvent`}))==null?void 0:i.data,t={maker_config_id:"",maker_pool_handle:""};return s.length>0&&s.forEach(n=>{const o=n.parsedJson;o&&(t.maker_config_id=o.config_id)}),t.maker_pool_handle=await this.getPoolHandleId(t.maker_config_id),t}async getPoolMarkerPositionList(e,s,t=!1){const i={},n=[];t||s.forEach(o=>{const a=`${e}_${o.period}_getPoolMarkerPositionList`,c=this.getCache(a);c!==void 0?i[o.period]=c:(i[o.period]=[],n.push(o))});try{n.length>0&&(await N(this._sdk.ClmmSDK,n.map(c=>c.id),{showContent:!0})).forEach(c=>{const l=k(c),u=$.buildMarkerPositions(l);if(u.length>0){const{period_id:_}=u[0],f=s.filter(v=>v.id===_)[0];i[f.period]=u}});const o=[];for(const a in i)i[a].forEach(l=>{o.push(l)});if(o.length>0){const a=await this._sdk.ClmmSDK.Position.getSipmlePositionList(o.map(c=>c.id));for(const c of o)for(const l of a)if(c.id===l.pos_object_id){c.clmm_position=l;break}}}catch(o){console.log(o)}for(const o in i){const a=`${e}_${o}_getPoolMarkerPositionList`;this.updateCache(a,i[o],g)}return i}async updateXCetusRewarderAndFee(e,s,t){const i=await this.calculateTotalPointsAfterMultiper(e,t);for(const n of s)await this.calculateXCetusRewarder(e,n,t.period,i);return s}async calculateXCetusRewarder(e,s,t,i){const n=await this.getPoolBonusInfo(e.rewarders.rewarder_handle,t),{fee_share_rate:o}=this.calculateFeeShareRate(e,s,i),a=r(o).mul(n.total_bonus);return s.is_redeemed?s.bonus_num="0":s.bonus_num=a.toString(),s.bonus_num}calculateFeeShareRate(e,s,t){const i=$.getBonusPercent(e.config,s.percent),n=r(s.point).mul(i),o=r(n).div(t);return s.point_after_multiplier=n.toString(),s.fee_share_rate=Number(o),{fee_share_rate:Number(o),points_after_multiper:n.toString()}}async calculateTotalPointsAfterMultiper(e,s){const t=await this.getPoolMarkerPositionList(e.whale_nfts.whale_nfts_handle,[s]);let i=r(0);const n=t[s.period];for(const o of n){const a=$.getBonusPercent(e.config,o.percent),c=r(o.point).mul(a);i=i.add(c)}return i.toString()}async calculateAllXCetusRewarder(e){const s=this._sdk.ClmmSDK.senderAddress;let t=r(0);const i=[];for(const n of e){const o=await this._sdk.MakerModule.getMakerPoolPeriods(n),a=await this._sdk.MakerModule.getPoolMarkerPositionList(n.whale_nfts.whale_nfts_handle,o),c=[];for(const l of o){const u=a[l.period].filter(_=>{var f;return s.length===0?!1:((f=_.clmm_position)==null?void 0:f.owner)===s});u.length>0&&(await this._sdk.MakerModule.updateXCetusRewarderAndFee(n,u,l),u.forEach(_=>{var f;((f=_.clmm_position)==null?void 0:f.position_status)===ye.Exists&&r(_.bonus_num).greaterThan(0)&&(t=t.add(_.bonus_num),c.includes(_.clmm_position.pos_object_id)||c.push(_.clmm_position.pos_object_id))}))}i.push({bonus_type:n.bonus_type,pool_id:n.pool_id,nft_ids:c})}return{claimtotal:t,claimRecord:i}}async getPoolBonusInfo(e,s,t=!1){const i=`${e}_${s}_getPoolBonusInfo`,n=this.getCache(i,t);if(n!==void 0)return n;const o=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"u64",value:s.toString()}}),a=k(o),c=$.buildPoolBonusInfo(a);return this.updateCache(i,c,L),c}claimPayload(e){const{maker_bonus:s,xcetus:t}=this.sdk.sdkOptions,i=new p;return i.moveCall({target:`${s.published_at}::${ne}::claim`,typeArguments:[e.bonus_type],arguments:[i.pure(d(s).maker_config_id),i.pure(e.market_pool_id),i.pure(e.position_nft_id),i.pure(e.phase),i.pure(d(t).lock_manager_id),i.pure(d(t).xcetus_manager_id),i.pure(e.ve_nft_id)]}),i}claimAllPayload(e){const{maker_bonus:s,xcetus:t}=this.sdk.sdkOptions,i=new p;return e.whale_nfts.forEach(n=>{n.nft_ids.forEach(o=>{i.moveCall({target:`${s.published_at}::${ne}::claim_all`,typeArguments:[n.bonus_type],arguments:[i.object(d(s).maker_config_id),i.object(n.pool_id),i.object(o),i.object(d(t).lock_manager_id),i.object(d(t).xcetus_manager_id),i.object(e.ve_nft_id)]})})}),i}updateCache(e,s,t=L){let i=this._cache[e];i?(i.overdueTime=P(t),i.value=s):i=new F(s,P(t)),this._cache[e]=i}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},R="router",oe="router",X=24*3600,G=1e3,x=1e11,E=class{static buildVeNFTDividendInfo(e){const s={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(t=>{const i=[];t.fields.value.fields.contents.forEach(n=>{i.push({coin_type:m(n.fields.key.fields.name).source_address,amount:n.fields.value})}),s.rewards.push({period:Number(t.fields.key),rewards:i})}),s}static buildDividendManager(e){const s={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:e.is_open};return e.bonus_types.forEach(t=>{s.bonus_types.push(m(t.fields.name).source_address)}),s}static buildLockUpManager(e){return{id:e.id.id,balance:e.balance,treasury_manager:e.treasury_manager,extra_treasury:e.extra_treasury,lock_infos:{lock_handle_id:e.lock_infos.fields.id.id,size:Number(e.lock_infos.fields.size)},type_name:re(e.type_name.fields.name),min_lock_day:Number(e.min_lock_day),max_lock_day:Number(e.max_lock_day),package_version:Number(e.package_version),max_percent_numerator:Number(e.max_percent_numerator),min_percent_numerator:Number(e.min_percent_numerator)}}static buildLockCetus(e){const s=e.fields,t={id:s.id.id,type:m(e.type).source_address,locked_start_time:Number(s.locked_start_time),locked_until_time:Number(s.locked_until_time),cetus_amount:s.balance,xcetus_amount:"0",lock_day:0};return t.lock_day=(t.locked_until_time-t.locked_start_time)/X,t}static getAvailableXCetus(e,s){let t=r(0);return s.forEach(i=>{t=t.add(i.xcetus_amount)}),r(e.xcetus_balance).sub(t).toString()}static getWaitUnLockCetuss(e){return e.filter(s=>!E.isLocked(s))}static getLockingCetuss(e){return e.filter(s=>E.isLocked(s))}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static getNextStartTime(e){const s=Date.now()/1e3,{start_time:t,interval_day:i}=e,n=Math.ceil((s-t)/(i*X));return t+n*i*X}},Se=class{constructor(e){b(this,"_sdk");b(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,s=!0){const{xcetus:t}=this.sdk.sdkOptions,i=`${e}_getLockUpManagerEvent`,n=this.getCache(i,s);if(n!==void 0)return n;let o;const a=`${t.package_id}::xcetus::VeNFT`;return(await U(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:a}})).data.forEach(l=>{const u=m(K(l)).source_address;if(u===a&&l.data&&l.data.content){const{fields:_}=l.data.content;o={...de(l),id:_.id.id,index:_.index,type:u,xcetus_balance:_.xcetus_balance},this.updateCache(i,o,g)}}),o}async getOwnerLockCetuss(e){const{xcetus:s}=this.sdk.sdkOptions,t=[],i=`${s.package_id}::lock_coin::LockedCoin<${this.buileCetusCoinType()}>`,n=await U(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0},filter:{StructType:i}});for(const o of n.data)if(m(K(o)).source_address===i&&o.data){const c=E.buildLockCetus(o.data.content);c.xcetus_amount=await this.getXCetusAmount(c.id),t.push(c)}return t}async getLockCetus(e){var t;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((t=s.data)!=null&&t.content){const i=E.buildLockCetus(s.data.content);return i.xcetus_amount=await this.getXCetusAmount(i.id),i}}async getOwnerCetusCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileCetusCoinType())}mintVeNFTPayload(){const{xcetus:e}=this.sdk.sdkOptions,s=new p;return s.moveCall({target:`${e.published_at}::${R}::mint_venft`,typeArguments:[],arguments:[s.pure(d(e).xcetus_manager_id)]}),s}async convertPayload(e){const{xcetus:s}=this.sdk.sdkOptions,t=new p,i=this.buileCetusCoinType(),n=await A.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,t,BigInt(e.amount),i);return e.venft_id===void 0?t.moveCall({target:`${s.published_at}::${R}::mint_and_convert`,typeArguments:[],arguments:[t.object(d(s).lock_manager_id),t.object(d(s).xcetus_manager_id),n,t.pure(e.amount)]}):t.moveCall({target:`${s.published_at}::${R}::convert`,typeArguments:[],arguments:[t.object(d(s).lock_manager_id),t.object(d(s).xcetus_manager_id),n,t.pure(e.amount),t.pure(e.venft_id)]}),t}redeemLockPayload(e){const{xcetus:s}=this.sdk.sdkOptions,t=new p;return t.moveCall({target:`${s.published_at}::${R}::redeem_lock`,typeArguments:[],arguments:[t.pure(d(s).lock_manager_id),t.pure(d(s).xcetus_manager_id),t.pure(e.venft_id),t.pure(e.amount),t.pure(e.lock_day),t.pure(h)]}),t}redeemPayload(e){const{xcetus:s}=this.sdk.sdkOptions,t=new p;return t.moveCall({target:`${s.published_at}::${R}::redeem`,typeArguments:[],arguments:[t.pure(d(s).lock_manager_id),t.pure(d(s).xcetus_manager_id),t.pure(e.venft_id),t.pure(e.lock_id),t.pure(h)]}),t}redeemDividendPayload(e,s){const{xcetus:t,xcetus_dividends:i}=this.sdk.sdkOptions,n=new p;return s.forEach(o=>{n.moveCall({target:`${t.published_at}::${oe}::redeem`,typeArguments:[o],arguments:[n.object(d(i).dividend_manager_id),n.object(e)]})}),n}redeemDividendV2Payload(e,s){const{xcetus_dividends:t}=this.sdk.sdkOptions,i=new p;return s.forEach(n=>{i.moveCall({target:`${t.published_at}::${oe}::redeem_v2`,typeArguments:[n],arguments:[i.object(d(t).dividend_manager_id),i.object(e),i.object(h)]})}),i}buileCetusCoinType(){return`${this.sdk.sdkOptions.cetus_faucet.package_id}::cetus::CETUS`}cancelRedeemPayload(e){const{xcetus:s}=this.sdk.sdkOptions,t=new p;return t.moveCall({target:`${s.published_at}::${R}::cancel_redeem_lock`,typeArguments:[],arguments:[t.pure(d(s).lock_manager_id),t.pure(d(s).xcetus_manager_id),t.pure(e.venft_id),t.pure(e.lock_id),t.pure(h)]}),t}async getInitConfigs(){var a,c;const{package_id:e}=this.sdk.sdkOptions.xcetus,s=`${e}_getInitFactoryEvent`,t=this.getCache(s);if(t!==void 0)return t;const i=(a=await w(this._sdk.ClmmSDK,{MoveEventType:`${e}::xcetus::InitEvent`}))==null?void 0:a.data,n={xcetus_manager_id:"",lock_manager_id:"",lock_handle_id:""};i.length>0&&i.forEach(l=>{const u=l.parsedJson;u&&(n.xcetus_manager_id=u.xcetus_manager)});const o=(c=await w(this._sdk.ClmmSDK,{MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:c.data;return o.length>0&&o.forEach(l=>{const u=l.parsedJson;u&&(n.lock_manager_id=u.lock_manager)}),n.lock_handle_id=(await this.getLockUpManager()).lock_infos.lock_handle_id,this.updateCache(s,n,g),n}async getLockUpManager(e=!1){const{lock_manager_id:s}=d(this.sdk.sdkOptions.xcetus),t=`${s}_getLockUpManager`,i=this.getCache(t,e);if(i!==void 0)return i;const n=await this.sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0}}),o=E.buildLockUpManager(k(n));return this.updateCache(t,o,g),o}async getDividendConfigs(){var o;const{package_id:e}=this.sdk.sdkOptions.xcetus_dividends,s=`${e}_getDividendManagerEvent`,t=this.getCache(s);if(t!==void 0)return t;const i=(o=await w(this._sdk.ClmmSDK,{MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:o.data,n={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return i.length>0&&i.forEach(a=>{const c=a.parsedJson;c&&(n.dividend_manager_id=c.manager_id,n.dividend_admin_id=c.admin_id,n.dividend_settle_id=c.settle_id,this.updateCache(s,n,g))}),n}async getDividendManager(e=!1){const{dividend_manager_id:s}=d(this._sdk.sdkOptions.xcetus_dividends),t=`${s}_getDividendManager`,i=this.getCache(t,e);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0}}),o=k(n),a=E.buildDividendManager(o);return this.updateCache(t,a,g),a}async getXcetusManager(e=!0){const{xcetus_manager_id:s}=d(this._sdk.sdkOptions.xcetus),t=`${s}_getXcetusManager`,i=this.getCache(t,e);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0}}),o=k(n),a={id:o.id.id,index:Number(o.index),has_venft:{handle:o.has_venft.fields.id.id,size:o.has_venft.fields.size},nfts:{handle:o.nfts.fields.id.id,size:o.nfts.fields.size},total_locked:o.total_locked,treasury:o.treasury.fields.total_supply.fields.value};return this.updateCache(t,a),a}async getVeNFTDividendInfo(e,s){try{const t=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:s}}),i=k(t);return E.buildVeNFTDividendInfo(i)}catch{return}}async redeemNum(e,s){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const t=await this.getLockUpManager(),i=r(x).mul(r(t.max_lock_day).sub(r(s))).mul(r(t.max_percent_numerator).sub(r(t.min_percent_numerator))).div(r(t.max_lock_day).sub(r(t.min_lock_day))),n=r(x).mul(r(t.max_percent_numerator)).sub(i).div(r(G)).div(x);return{amountOut:r(n).mul(r(e)).round().toString(),percent:n.toString()}}async reverseRedeemNum(e,s){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const t=await this.getLockUpManager(),i=r(x).mul(r(t.max_lock_day).sub(r(s))).mul(r(t.max_percent_numerator).sub(r(t.min_percent_numerator))).div(r(t.max_lock_day).sub(r(t.min_lock_day))),n=r(x).mul(r(t.max_percent_numerator)).sub(i).div(r(G)).div(x);return{amountOut:r(e).div(n).toFixed(0,O.ROUND_UP),percent:n.toString()}}async getXCetusAmount(e){const{lock_handle_id:s}=d(this._sdk.sdkOptions.xcetus),t=`${e}_getXCetusAmount`,i=this.getCache(t);if(i!==void 0)return i;try{const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:s,name:{type:"0x2::object::ID",value:e}}),o=k(n);if(o){const{xcetus_amount:a}=o.value.fields.value.fields;return this.updateCache(t,a,g),a}}catch{}return"0"}async getVeNftAmount(e,s){try{const t=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:s}}),i=k(t);if(i){const{lock_amount:n,xcetus_amount:o}=i.value.fields.value.fields;return{lock_amount:n,xcetus_amount:o}}}catch{}return{lock_amount:"0",xcetus_amount:"0"}}async getPhaseDividendInfo(e,s=!1){const i=(await this.getDividendManager()).dividends.id,n=`${i}_${e}_getPhaseDividendInfo`,o=this._sdk.getCache(n,s);if(o)return o;const a=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:i,name:{type:"u64",value:e}}),c=k(a),l=c.value.fields.value.fields,u=l.redeemed_num.fields.contents.map(y=>({name:y.fields.key.fields.name,value:y.fields.value})),_=l.bonus_types.map(y=>y.fields.name),f=l.bonus.fields.contents.map(y=>({name:y.fields.key.fields.name,value:y.fields.value})),v={id:V(a),phase:c.name,settled_num:l.settled_num,register_time:l.register_time,redeemed_num:u,is_settled:l.is_settled,bonus_types:_,bonus:f,phase_end_time:""};return this.updateCache(n,v),v}updateCache(e,s,t=L){let i=this._cache[e];i?(i.overdueTime=P(t),i.value=s):i=new F(s,P(t)),this._cache[e]=i}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},xe="factory",S="oversubscribe_pool",ue=1e6,W=1e18,B="router",ae="router",C=class{static buildIdoPoolImmutables(e){return{pool_address:z(e.pool_id),coin_type_sale:m(e.sale_coin_type.name).full_address,coin_type_raise:m(e.raise_coin_type.name).full_address,tick_spacing:Number(e.tick_spacing),total_supply:e.total_supply,min_purchase:e.min_purchase_amount,max_purchase:e.max_purchase_amount}}static buildIdoPool(e){const s=K(e),t=m(s),i=k(e),n={pool_address:z(i.id.id),coin_type_sale:t.type_arguments[0],coin_type_raise:t.type_arguments[1],tick_spacing:Number(i.tick_spacing),total_supply:i.total_supply,min_purchase:i.min_purchase_amount,max_purchase:i.max_purchase_amount},o={start_time:Number(i.duration_manager.fields.start_time),lock_up_duration:Number(i.duration_manager.fields.lock_up_duration),purchase_duration:Number(i.duration_manager.fields.purchase_duration),end_time:0};o.end_time=o.start_time+o.purchase_duration;const a={complete_raise_limit:i.complete_raise_limit,liquidity_injection_ratio:r(i.liquidity_injection_ratio).div(ue).toNumber(),current_sqrt_price_min:i.current_sqrt_price_min,current_sqrt_price_max:i.current_sqrt_price_max,owner:i.owner,sale_coin_amount:i.sale_coin,raise_coin_amount:i.raise_coin,price:i.price,current_price:i.price,duration_summary:o,is_cancelled:i.is_cancelled,is_liquidity_injected:i.is_liquidity_injected,liquidity_used_raise_amount:i.liquidity_used_raise_amount,liquidity_used_sale_amount:i.liquidity_used_sale_amount,purchase_summary:{size:Number(i.purchase_manager.fields.purchases.fields.size),purchase_handle:i.purchase_manager.fields.purchases.fields.id.id},total_purchase_amount:i.total_purchase_amount,white_summary:{white_list_id:i.white_list.fields.id.id,protection_limit_used:i.white_list.fields.protection_limit_used,protection_hard_cap:i.white_list.fields.protection_hard_cap,white_handle:i.white_list.fields.addresses.fields.id.id,size:Number(i.white_list.fields.addresses.fields.size)},pool_status:"Upcoming",max_raise_amount:"",sale_decimals:0,raise_decimals:0,is_withdrawn:i.is_withdrawn};return C.updatePoolStatus(a),{...n,...a}}static is_init_period(e){return Number(r(Date.now()/1e3).toFixed(0))<e.start_time}static is_purchase_period(e){const s=Number(r(Date.now()/1e3).toFixed(0));return s>=e.start_time&&s<=e.start_time+e.purchase_duration}static is_claim_period(e){const s=Number(r(Date.now()/1e3).toFixed(0)),t=e.start_time+e.purchase_duration;return s>t}static is_can_inject_liquidity(e){return!e.is_cancelled&&e.liquidity_injection_ratio!==0&&C.is_claim_period(e.duration_summary)&&!e.is_liquidity_injected}static is_can_withdraw(e){return e.is_withdrawn?!1:C.is_sale_failed(e)?!0:(e.liquidity_injection_ratio===0||e.is_liquidity_injected)&&C.is_claim_period(e.duration_summary)}static is_sale_failed(e){return!!(e.is_cancelled||C.is_claim_period(e.duration_summary)&&r(e.total_purchase_amount).lessThan(e.complete_raise_limit))}static buildPurchaseInfo(e){return{...e.value.fields.value.fields,owner:e.name}}static calculateRedeemAmount(e,s){let t,i;if(C.is_sale_failed(e))t="0",i="0";else if(s.is_redeemed)t=s.obtained_sale_amount,i=s.used_raise_amount;else if(r(e.total_purchase_amount).lessThanOrEqualTo(e.max_raise_amount))t=r(s.purchased_raise_amount).mul(W).div(e.price).toString(),i=s.purchased_raise_amount;else{const o=C.redeemForSaleOversubcribe(e,s);t=o.user_obtained_sale_amount,i=o.user_used_raise_amount_ceil}t=O.floor(t);const n=O.floor(r(s.purchased_raise_amount).sub(i).toString());return{obtained_sale_amount:t,refunded_raise_amount:n}}static calculateWithdrawAmount(e){let s,t;const i=r(e.total_supply).mul(e.liquidity_injection_ratio);if(C.is_sale_failed(e))s="0",t=r(i).add(e.total_supply);else{const{max_raise_amount:n}=e;r(e.total_purchase_amount).greaterThanOrEqualTo(n)?(s=r(n).sub(e.liquidity_used_raise_amount).toString(),t="0"):(s=r(e.total_purchase_amount).sub(e.liquidity_used_raise_amount),t=r(e.total_supply).add(i).sub(e.liquidity_used_sale_amount).sub(C.get_sold_amount(e)))}return{obtained_raise_amount:O.floor(s).toString(),refunded_sale_amount:O.ceil(t).toString()}}static get_sold_amount(e){return r(e.total_purchase_amount).greaterThanOrEqualTo(e.max_raise_amount)?e.total_supply:r(e.total_purchase_amount).mul(W).div(e.price)}static redeemForSaleOversubcribe(e,s){const t=s.protection_raise_amount,i=r(s.purchased_raise_amount).sub(t),n=e.max_raise_amount,{protection_limit_used:o}=e.white_summary,a=r(n).sub(o),c=r(e.total_purchase_amount).sub(o),l=O.ceil(i.mul(a).div(c).add(t)),u=O.floor(i.mul(a).div(c).add(t));return{user_obtained_sale_amount:O.floor(r(e.total_supply).mul(u).div(n)),user_used_raise_amount_ceil:l}}static raiseTotalAmount(e){const s=r(e.sale_decimals-e.raise_decimals).abs().toNumber();return e.sale_decimals>e.raise_decimals?r(e.total_supply).mul(e.current_price).div(r(10).pow(r(s))).toString():r(e.total_supply).mul(e.current_price).mul(r(10).pow(r(s))).toString()}static updatePoolStatus(e){const s=Number(r(Date.now()/1e3).toFixed(0)),t=e.duration_summary,i=t.start_time+t.purchase_duration;e.is_cancelled?e.pool_status="Canceled":s<t.start_time?e.pool_status="Upcoming":s>t.start_time&&s<i?e.pool_status="Live":r(e.total_purchase_amount).lessThan(e.complete_raise_limit)?e.pool_status="Failed":e.pool_status="Ended"}static async calculatePoolUiPrice(e,s){const t=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([s.coin_type_sale,s.coin_type_raise]),i=t[s.coin_type_sale].decimals,n=t[s.coin_type_raise].decimals;s.current_price=T.priceFixToReal(Number(r(s.price).div(r(W)).toString()),i,n).toString(),s.sale_decimals=i,s.raise_decimals=n,s.max_raise_amount=this.raiseTotalAmount(s)}},M=class{static buildVeNFTDividendInfo(e){const s={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(t=>{const i=[];t.fields.value.fields.contents.forEach(n=>{i.push({coin_type:m(n.fields.key.fields.name).source_address,amount:n.fields.value})}),s.rewards.push({period:Number(t.fields.key),rewards:i})}),s}static buildDividendManager(e){const s={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:e.is_open};return e.bonus_types.forEach(t=>{s.bonus_types.push(m(t.fields.name).source_address)}),s}static buildLockUpManager(e){return{id:e.id.id,balance:e.balance,treasury_manager:e.treasury_manager,extra_treasury:e.extra_treasury,lock_infos:{lock_handle_id:e.lock_infos.fields.id.id,size:Number(e.lock_infos.fields.size)},type_name:re(e.type_name.fields.name),min_lock_day:Number(e.min_lock_day),max_lock_day:Number(e.max_lock_day),package_version:Number(e.package_version),max_percent_numerator:Number(e.max_percent_numerator),min_percent_numerator:Number(e.min_percent_numerator)}}static buildLockToken(e){const s=e.fields,t={id:s.id.id,type:m(e.type).source_address,locked_start_time:Number(s.locked_start_time),locked_until_time:Number(s.locked_until_time),token_amount:s.balance,xtoken_amount:"0",lock_day:0};return t.lock_day=(t.locked_until_time-t.locked_start_time)/X,t}static getAvailableXToken(e,s){let t=r(0);return s.forEach(i=>{t=t.add(i.xtoken_amount)}),r(e.xtoken_balance).sub(t).toString()}static getWaitUnLockTokens(e){return e.filter(s=>!M.isLocked(s))}static getLockingTokens(e){return e.filter(s=>M.isLocked(s))}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static getNextStartTime(e,s=X){const t=Date.now()/1e3,{start_time:i,interval_day:n}=e,o=Math.ceil((t-i)/(n*s));return i+o*n*s}},Oe=class{constructor(e){b(this,"_sdk");b(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e="all",s=!1){const{package_id:t}=this._sdk.sdkOptions.ido,i=`${t}_getPoolImmutables`,n=this.getCache(i,s),o={data:[],hasNextPage:!1},a=[];if(n!==void 0&&a.push(...n),a.length===0)try{const c=await w(this._sdk.ClmmSDK,{MoveEventType:`${t}::oversubscribe_pool::CreatePoolEvent`},e);c.data.forEach(l=>{const u=l.parsedJson;if(u){const _=C.buildIdoPoolImmutables(u);a.push(_)}}),o.hasNextPage=c.hasNextPage,o.nextCursor=c.nextCursor,this.updateCache(i,a,g)}catch(c){console.log("getPoolImmutables",c)}return o.data=a,o}async getPools(e=[],s=!1){const t=[];let i=[];e.length>0?i=[...e]:(await this.getPoolImmutables("all",s)).data.forEach(a=>{i.push(a.pool_address)});const n=await N(this.sdk.ClmmSDK,i,{showType:!0,showContent:!0});for(const o of n){const a=C.buildIdoPool(o);await C.calculatePoolUiPrice(this._sdk,a),t.push(a);const c=`${a.pool_address}_getPoolObject`;this.updateCache(c,a,g)}return t}async getPool(e,s=!0){const t=`${e}_getPoolObject`,i=this.getCache(t,s);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=C.buildIdoPool(n);return await C.calculatePoolUiPrice(this._sdk,o),this.updateCache(t,o),o}async getIdoConfigs(e=!1){var l;const{package_id:s}=this._sdk.sdkOptions.ido,t=`${s}_getInitEvent`,i=this.getCache(t,e);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showPreviousTransaction:!0}}),o=ce(n),a=(l=await w(this._sdk.ClmmSDK,{Transaction:o}))==null?void 0:l.data,c={pools_id:"",admin_cap_id:"",package_version_id:""};return a.length>0&&(a.forEach(u=>{console.log("item: ",u);const _=u.parsedJson;if(_)switch(m(u.type).full_address){case`${s}::config::InitConfigEvent`:c.admin_cap_id=_.admin_cap_id,c.package_version_id=_.package_version_id;break;case`${s}::factory::InitFactoryEvent`:c.pools_id=_.pools_id;break}}),this.updateCache(t,c,g)),c}async getPurchaseInfo(e,s,t=!0){const i=`${e}_${s}_getPurchaseInfo`,n=this.getCache(i,t);if(n)return n;try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"address",value:s}}),a=C.buildPurchaseInfo(k(o));return this.updateCache(i,a,L),a}catch{return}}async getLockNFT(e,s=!1){const t=`${e}_getLockNFT`,i=this.getCache(t,s);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!n.error)return te(n)}async getLockNFTList(e){var n;const{clmm_pool:s}=this._sdk.ClmmSDK.sdkOptions,{ido:t}=this._sdk.sdkOptions,i=[];try{const o=(n=await U(this._sdk.ClmmSDK,e,{filter:{StructType:`${t.package_id}::lock::LockedNFT<${s.package_id}::position::Position>`},options:{showContent:!0}}))==null?void 0:n.data;for(const a of o){const c=k(a);if(c){const l=c.nft.fields,u={locked_at:Number(c.locked_at),lock_duration:Number(c.lock_duration),lock_nft_id:c.id.id,type:c.nft.type,...l};u.end_lock_time=u.locked_at+u.lock_duration,u.coin_type_a=m(l.coin_type_a.fields.name).full_address,u.coin_type_b=m(l.coin_type_b.fields.name).full_address,u.id=l.id.id,u.tick_lower_index=ie(BigInt(l.tick_lower_index.fields.bits)),u.tick_upper_index=ie(BigInt(l.tick_upper_index.fields.bits)),i.push(u)}}return i}catch(o){return console.log("getLockNFTList:",o),[]}}async creatPool(e){const{ido:s}=this.sdk.sdkOptions;be(j(e.coin_type_sale),j(e.coin_type_raise))&&(e.price_min=r(1).div(e.price_max).toNumber(),e.price_max=r(1).div(e.price_min).toNumber());const i=T.priceRealToFix(Number(e.price),e.sale_decimals,e.raise_decimals),n=H.priceToSqrtPriceX64(r(e.price_min),e.sale_decimals,e.raise_decimals).toString(),o=H.priceToSqrtPriceX64(r(e.price_max),e.sale_decimals,e.raise_decimals).toString(),a=new p,c=r(e.total_supply).add(r(e.total_supply).mul(r(e.liquidity_injection_ratio))).toNumber(),l=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.coin_type_sale),u=A.buildCoinInputForAmount(a,l,BigInt(c),e.coin_type_sale,!1),_=[a.pure(d(s).admin_cap_id),a.pure(d(s).package_version_id),a.pure(d(s).pools_id),a.pure(j(e.owner)),a.pure(r(i).mul(W).toString()),a.pure(e.total_supply),a.pure(e.complete_raise_limit),a.pure(e.min_purchase_amount),a.pure(e.max_purchase_amount),a.pure(e.start_time),a.pure(e.purchase_duration),a.pure(e.lock_up_duration),a.pure((e.liquidity_injection_ratio*ue).toString()),a.pure(n),a.pure(o),a.pure(e.tick_spacing.toString()),u.transactionArgument,a.pure(e.protection_hard_cap.toString()),a.pure(h)],f=[e.coin_type_sale,e.coin_type_raise];return a.moveCall({target:`${s.published_at}::${xe}::create_oversubscribe_pool`,typeArguments:f,arguments:_}),a}async creatPurchasePayload(e){const{ido:s}=this.sdk.sdkOptions,t=new p,i=await this.getPurchaseInfo(e.purchase_handle,this._sdk.ClmmSDK.senderAddress,!1),n=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.coin_type_raise),o=A.buildCoinInputForAmount(t,n,BigInt(e.raise_amount),e.coin_type_raise,!1),a=[e.coin_type_sale,e.coin_type_raise];let c,l;return i?(l="purchase",c=[t.object(d(s).package_version_id),t.object(e.pool_address),t.object(i.purchase_certificate_id),t.pure(e.raise_amount.toString()),o.transactionArgument,t.pure(h)]):(l="create_certificate_and_purchase",c=[t.object(d(s).package_version_id),t.object(e.pool_address),t.pure(e.raise_amount.toString()),o.transactionArgument,t.pure(h)]),t.moveCall({target:`${s.published_at}::${S}::${l}`,typeArguments:a,arguments:c}),t}async redeemPayload(e){const{ido:s}=this.sdk.sdkOptions,t=await this.getPurchaseInfo(e.purchase_handle,this._sdk.ClmmSDK.senderAddress,!1);if(t===void 0)throw Error("get purchase certificate fail");const i=new p,n=[e.coin_type_sale,e.coin_type_raise],o=[i.pure(d(s).package_version_id),i.pure(e.pool_address),i.pure(t.purchase_certificate_id),i.pure(h)];return i.moveCall({target:`${s.published_at}::${S}::redeem`,typeArguments:n,arguments:o}),i}injectLiquidityPayload(e){const{ido:s}=this.sdk.sdkOptions,{clmm_pool:t}=this.sdk.ClmmSDK.sdkOptions,i=new p,n=[e.coin_type_sale,e.coin_type_raise],o=e.is_reverse?"inject_liquidity_with_reverse_clmm_pool":"inject_liquidity_with_forward_clmm_pool",a=[i.pure(d(s).package_version_id),i.pure(e.pool_address),i.pure(d(t).global_config_id),i.pure(e.clmm_pool_address),i.pure(h)];return i.moveCall({target:`${s.published_at}::${S}::${o}`,typeArguments:n,arguments:a}),i}unPauseInjectLiquidity(e){const{ido:s}=this.sdk.sdkOptions,{integrate:t,clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,n=new p;n.moveCall({target:`${t.published_at}::${ve}::unpause_pool`,typeArguments:[e.coin_type_a,e.coin_type_b],arguments:[n.object(d(i).global_config_id),n.object(e.clmm_pool_address)]});const o=[e.coin_type_sale,e.coin_type_raise],a=e.is_reverse?"inject_liquidity_with_reverse_clmm_pool":"inject_liquidity_with_forward_clmm_pool",c=[n.object(d(s).package_version_id),n.object(e.pool_address),n.object(d(i).global_config_id),n.object(e.clmm_pool_address),n.object(h)];return n.moveCall({target:`${s.published_at}::${S}::${a}`,typeArguments:o,arguments:c}),n}async findClmmPoolForLiquidity(e){let s=null,t=!1;const i=await this.sdk.ClmmSDK.Pool.getPoolImmutables();for(const n of i){if(n.coinTypeA===e.coin_type_sale&&n.coinTypeB===e.coin_type_raise&&Number(n.tickSpacing)===e.tick_spacing){s=await this._sdk.ClmmSDK.Pool.getPool(n.poolAddress);break}if(n.coinTypeA===e.coin_type_raise&&n.coinTypeB===e.coin_type_sale&&Number(n.tickSpacing)===e.tick_spacing){s=await this._sdk.ClmmSDK.Pool.getPool(n.poolAddress),t=!0;break}}return s&&(r(s.current_sqrt_price).lessThanOrEqualTo(e.current_sqrt_price_min)||r(s.current_sqrt_price).greaterThanOrEqualTo(e.current_sqrt_price_max))?(console.log("clmmPool: ",s.poolAddress),{is_reverse:t,clmmPool:null}):{is_reverse:t,clmmPool:s}}withdrawPayload(e){const{ido:s}=this.sdk.sdkOptions,t=new p,i=[e.coin_type_sale,e.coin_type_raise],n=[t.object(d(s).package_version_id),t.object(e.pool_address),t.object(h)];return t.moveCall({target:`${s.published_at}::${S}::withdraw`,typeArguments:i,arguments:n}),t}updateWhitelistCapPayload(e){const{ido:s}=this.sdk.sdkOptions,t=new p,i=[e.coin_type_sale,e.coin_type_raise];return e.add_whites&&e.add_whites.addresses.length>0&&t.moveCall({target:`${s.published_at}::${S}::add_white_listed_addresses`,typeArguments:i,arguments:[t.object(d(s).admin_cap_id),t.object(d(s).package_version_id),t.object(e.pool_address),t.makeMoveVec({type:"address",objects:e.add_whites.addresses.map(n=>t.pure(z(n),"address"))}),t.pure(e.add_whites.protection_limit),t.object(h)]}),e.remove_whites&&e.remove_whites.length>0&&t.moveCall({target:`${s.published_at}::${S}::remove_white_listed_addresses`,typeArguments:i,arguments:[t.object(d(s).admin_cap_id),t.object(d(s).package_version_id),t.object(e.pool_address),t.makeMoveVec({type:"address",objects:e.remove_whites.map(n=>t.pure(z(n),"address"))}),t.object(h)]}),e.update_whites&&e.update_whites.forEach(n=>{t.moveCall({target:`${s.published_at}::${S}::update_white_listed_address`,typeArguments:i,arguments:[t.object(d(s).admin_cap_id),t.object(d(s).package_version_id),t.object(e.pool_address),t.object(n.address),t.pure(n.protection_limit),t.object(h)]})}),t}creatCancelPoolPayload(e){const{ido:s}=this.sdk.sdkOptions,t=new p,i=[e.coin_type_sale,e.coin_type_raise],n=[t.pure(d(s).admin_cap_id),t.pure(d(s).package_version_id),t.pure(e.pool_address),t.pure(h)];return t.moveCall({target:`${s.published_at}::${S}::cancel`,typeArguments:i,arguments:n}),t}updatePoolOwnerPayload(e,s){const{ido:t}=this.sdk.sdkOptions;s=s===void 0?new p:s;const i=[e.coin_type_sale,e.coin_type_raise],n=[s.object(d(t).admin_cap_id),s.object(d(t).package_version_id),s.object(e.pool_address),s.object(e.new_owner),s.object(h)];return s.moveCall({target:`${t.published_at}::${S}::update_pool_owner`,typeArguments:i,arguments:n}),s}updatePoolDuractionPayload(e,s){const{ido:t}=this.sdk.sdkOptions;s=s===void 0?new p:s;const i=[e.coin_type_sale,e.coin_type_raise],n=[s.object(d(t).admin_cap_id),s.object(d(t).package_version_id),s.object(e.pool_address),s.pure(e.start_time),s.pure(e.purchase_duration),s.pure(e.lock_duration),s.object(h)];return s.moveCall({target:`${t.published_at}::${S}::update_pool_duration`,typeArguments:i,arguments:n}),s}updateProtectionHardCapPayload(e,s){const{ido:t}=this.sdk.sdkOptions;s=s===void 0?new p:s;const i=[e.coin_type_sale,e.coin_type_raise],n=[s.object(d(t).admin_cap_id),s.object(d(t).package_version_id),s.object(e.pool_address),s.pure(e.protection_hard_cap),s.object(h)];return s.moveCall({target:`${t.published_at}::${S}::update_protection_hard_cap`,typeArguments:i,arguments:n}),s}unlockNftPayload(e){const{ido:s}=this.sdk.sdkOptions,t=new p,i=[e.nft_type],n=[t.pure(e.lock_nft_id),t.pure(h)];return t.moveCall({target:`${s.published_at}::lock::unlock_nft`,typeArguments:i,arguments:n}),t}async isAdminCap(e){const{ido:s}=this._sdk.sdkOptions,t=`${s.package_id}_${e}_isAdminCap`,i=this.getCache(t);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:d(s).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(n);const o=Z(n),a=ee(n);let c=!1;return a&&o&&m(o).source_address===`${s.package_id}::config::AdminCap`&&(c=j(a.AddressOwner)===j(e)),this.updateCache(t,c,g),c}async getWhiteProtectionLimit(e,s,t=!0){const i=`${e}_${s}_getWhiteProtectionLimit`,n=this._sdk.getCache(i,t);if(n)return n;try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"address",value:s}});if(o&&o.data){const a=k(o);return this._sdk.updateCache(i,a.value),a.value}return}catch{return}}async getWhiteList(e,s){var i;const t={type:"address",value:s};try{const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:t}),o=k(n);if(console.log(o),o)return(i=o==null?void 0:o.value)==null?void 0:i.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getAdminAddress(){const{ido:e}=this._sdk.sdkOptions,s=`${d(e).admin_cap_id}_getAdminAddress`,t=this.getCache(s);if(t)return t;const i=await this._sdk.ClmmSDK.fullClient.getObject({id:d(e).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(i);const n=Z(i),o=ee(i);if(o&&n&&m(n).source_address===`${e.package_id}::config::AdminCap`){const c=j(o.AddressOwner);return this.updateCache(s,c,g),c}return""}updateCache(e,s,t=g){let i=this._cache[e];i?(i.overdueTime=P(t),i.value=s):i=new F(s,P(t)),this._cache[e]=i}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},Te=class{constructor(e){b(this,"_sdk");b(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,s=!0){const{xtoken:t}=this.sdk.sdkOptions,i=`${e}_getLockUpManagerEvent`,n=this.getCache(i,s);if(n!==void 0)return n;let o;const a=`${t.package_id}::xtoken::VeNFT`;return(await U(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:a}})).data.forEach(l=>{const u=m(K(l)).source_address;if(u===a&&l.data&&l.data.content){const{fields:_}=l.data.content;o={...de(l),id:_.id.id,index:_.index,type:u,xtoken_balance:_.xtoken_balance},this.updateCache(i,o,g)}}),o}async getOwnerLockTokens(e){const{xtoken:s}=this.sdk.sdkOptions,t=[],i=`${s.package_id}::lock_coin::LockedCoin<${this.buileTokenCoinType()}>`,n=await U(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0},filter:{StructType:i}});for(const o of n.data)if(m(K(o)).source_address===i&&o.data){const c=M.buildLockToken(o.data.content),l=await this.getLockXToken(c.id);l&&(c.xtoken_amount=l.xtoken_amount),t.push(c)}return t}async getLockToken(e){var t;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((t=s.data)!=null&&t.content){const i=M.buildLockToken(s.data.content),n=await this.getLockXToken(i.id);return n&&(i.xtoken_amount=n.xtoken_amount),i}}async getOwnerTokenCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileTokenCoinType())}mintVeNFTPayload(){const{xtoken:e}=this.sdk.sdkOptions,s=new p;return s.moveCall({target:`${e.published_at}::${B}::mint_venft`,typeArguments:[],arguments:[s.pure(d(e).xtoken_manager_id)]}),s}async convertPayload(e){const{xtoken:s}=this.sdk.sdkOptions,t=new p,i=this.buileTokenCoinType(),n=await A.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,t,BigInt(e.amount),i);return e.venft_id===void 0?t.moveCall({target:`${s.published_at}::${B}::mint_and_convert`,typeArguments:[],arguments:[t.object(d(s).lock_manager_id),t.object(d(s).xtoken_manager_id),n,t.pure(e.amount)]}):t.moveCall({target:`${s.published_at}::${B}::convert`,typeArguments:[],arguments:[t.object(d(s).lock_manager_id),t.object(d(s).xtoken_manager_id),n,t.pure(e.amount),t.pure(e.venft_id)]}),t}redeemLockPayload(e){const{xtoken:s}=this.sdk.sdkOptions,t=new p;return t.moveCall({target:`${s.published_at}::${B}::redeem_lock`,typeArguments:[],arguments:[t.pure(d(s).lock_manager_id),t.pure(d(s).xtoken_manager_id),t.pure(e.venft_id),t.pure(e.amount),t.pure(e.lock_day),t.pure(h)]}),t}redeemPayload(e){const{xtoken:s}=this.sdk.sdkOptions,t=new p;return t.moveCall({target:`${s.published_at}::${B}::redeem`,typeArguments:[],arguments:[t.pure(d(s).lock_manager_id),t.pure(d(s).xtoken_manager_id),t.pure(e.venft_id),t.pure(e.lock_id),t.pure(h)]}),t}redeemDividendPayload(e,s){const{xtoken_dividends:t}=this.sdk.sdkOptions,i=new p;return s.forEach(n=>{i.moveCall({target:`${t.published_at}::${ae}::redeem`,typeArguments:[n],arguments:[i.object(d(t).dividend_manager_id),i.object(e)]})}),i}redeemDividendV2Payload(e,s){const{xtoken_dividends:t}=this.sdk.sdkOptions,i=new p;return s.forEach(n=>{i.moveCall({target:`${t.published_at}::${ae}::redeem_v2`,typeArguments:[n],arguments:[i.object(d(t).dividend_manager_id),i.object(e),i.object(h)]})}),i}buileTokenCoinType(){return`${this.sdk.sdkOptions.token_faucet.package_id}::token::TOKEN`}cancelRedeemPayload(e){const{xtoken:s}=this.sdk.sdkOptions,t=new p;return t.moveCall({target:`${s.published_at}::${B}::cancel_redeem_lock`,typeArguments:[],arguments:[t.pure(d(s).lock_manager_id),t.pure(d(s).xtoken_manager_id),t.pure(e.venft_id),t.pure(e.lock_id),t.pure(h)]}),t}async getInitConfigs(){var a,c;const{package_id:e}=this.sdk.sdkOptions.xtoken,s=`${e}_getInitFactoryEvent`,t=this.getCache(s);if(t!==void 0)return t;const i=(a=await w(this._sdk.ClmmSDK,{MoveEventType:`${e}::xtoken::InitEvent`}))==null?void 0:a.data,n={xtoken_manager_id:"",lock_manager_id:"",lock_handle_id:""};i.length>0&&i.forEach(l=>{const u=l.parsedJson;u&&(n.xtoken_manager_id=u.xtoken_manager)});const o=(c=await w(this._sdk.ClmmSDK,{MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:c.data;return o.length>0&&o.forEach(l=>{const u=l.parsedJson;u&&(n.lock_manager_id=u.lock_manager)}),n.lock_handle_id=(await this.getLockUpManager()).lock_infos.lock_handle_id,this.updateCache(s,n,g),n}async getLockUpManager(){const{xtoken:e}=this.sdk.sdkOptions,{lock_manager_id:s}=d(e),t=`${s}_getLockUpManagerEvent`,i=this.getCache(t);if(i!==void 0)return i;const n=await this.sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0}}),o=M.buildLockUpManager(k(n));return this.updateCache(t,o,g),o}async getLockInfoHandle(e){const s=`${e}_getLockInfoHandle`,t=this.getCache(s);if(t!==void 0)return t;let i="";const n=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),o=k(n);return o&&(i=o.lock_infos.fields.id.id,this.updateCache(s,i,g)),i}async getDividendConfigs(){var o;const{package_id:e}=this.sdk.sdkOptions.xtoken_dividends,s=`${e}_getDividendManagerEvent`,t=this.getCache(s);if(t!==void 0)return t;const i=(o=await w(this._sdk.ClmmSDK,{MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:o.data,n={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return i.length>0&&i.forEach(a=>{const c=a.parsedJson;c&&(n.dividend_manager_id=c.manager_id,n.dividend_admin_id=c.admin_id,n.dividend_settle_id=c.settle_id,this.updateCache(s,n,g))}),n}async getDividendManager(e=!1){const{dividend_manager_id:s}=d(this.sdk.sdkOptions.xtoken_dividends),t=`${s}_getDividendManager`,i=this.getCache(t,e);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0}}),o=k(n),a=M.buildDividendManager(o);return this.updateCache(t,a,g),a}async getXcetusManager(e=!0){const{xtoken_manager_id:s}=d(this.sdk.sdkOptions.xtoken),t=`${s}_getXcetusManager`,i=this.getCache(t,e);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:s,options:{showContent:!0}}),o=k(n),a={id:o.id.id,index:Number(o.index),has_venft:{handle:o.has_venft.fields.id.id,size:o.has_venft.fields.size},nfts:{handle:o.nfts.fields.id.id,size:o.nfts.fields.size},total_locked:o.total_locked,treasury:o.treasury.fields.total_supply.fields.value};return this.updateCache(t,a),a}async getVeNFTDividendInfo(e,s){try{const t=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:s}}),i=k(t);return M.buildVeNFTDividendInfo(i)}catch{return}}async redeemNum(e,s){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const t=await this.getLockUpManager(),i=r(x).mul(r(t.max_lock_day).sub(r(s))).mul(r(t.max_percent_numerator).sub(r(t.min_percent_numerator))).div(r(t.max_lock_day).sub(r(t.min_lock_day))),n=r(x).mul(r(t.max_percent_numerator)).sub(i).div(r(G)).div(x);return{amountOut:r(n).mul(r(e)).round().toString(),percent:n.toString()}}async reverseRedeemNum(e,s){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const t=await this.getLockUpManager(),i=r(x).mul(r(t.max_lock_day).sub(r(s))).mul(r(t.max_percent_numerator).sub(r(t.min_percent_numerator))).div(r(t.max_lock_day).sub(r(t.min_lock_day))),n=r(x).mul(r(t.max_percent_numerator)).sub(i).div(r(G)).div(x);return{amountOut:r(e).div(n).toFixed(0,O.ROUND_UP),percent:n.toString()}}async getLockXToken(e){const{lock_handle_id:s}=d(this._sdk.sdkOptions.xtoken),t=`${e}_getXTokenAmount`,i=this.getCache(t);if(i)return i;try{const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:s,name:{type:"0x2::object::ID",value:e}}),o=k(n);if(o){const a=o.value.fields.value.fields;return this.updateCache(t,a,g),a}}catch{}}async getVeNftAmount(e,s){try{const t=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:s}}),i=k(t);if(i){const{lock_amount:n,xcetus_amount:o}=i.value.fields.value.fields;return{lock_amount:n,xcetus_amount:o}}}catch{}return{lock_amount:"0",xcetus_amount:"0"}}async getPhaseDividendInfo(e,s=!1){const i=(await this.getDividendManager()).dividends.id,n=`${i}_${e}_getPhaseDividendInfo`,o=this._sdk.getCache(n,s);if(o)return o;const a=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:i,name:{type:"u64",value:e}}),c=k(a),l=c.value.fields.value.fields,u=l.redeemed_num.fields.contents.map(y=>({name:y.fields.key.fields.name,value:y.fields.value})),_=l.bonus_types.map(y=>y.fields.name),f=l.bonus.fields.contents.map(y=>({name:y.fields.key.fields.name,value:y.fields.value})),v={id:V(a),phase:c.name,settled_num:l.settled_num,register_time:l.register_time,redeemed_num:u,is_settled:l.is_settled,bonus_types:_,bonus:f,phase_end_time:""};return this.updateCache(n,v),v}updateCache(e,s,t=L){let i=this._cache[e];i?(i.overdueTime=P(t),i.value=s):i=new F(s,P(t)),this._cache[e]=i}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}},$e=class{constructor(e,s){b(this,"_cache",{});b(this,"_sdkOptions");b(this,"_launchpad");b(this,"_ido");b(this,"_xcetusModule");b(this,"_xtokenModule");b(this,"_boosterModule");b(this,"_makerModule");b(this,"_clmmSDK");this._sdkOptions=e,this._clmmSDK=s,this._launchpad=new De(this),this._ido=new Oe(this),this._xcetusModule=new Se(this),this._xtokenModule=new Te(this),this._boosterModule=new we(this),this._makerModule=new Pe(this),fe(this._sdkOptions)}get ClmmSDK(){return this._clmmSDK}get sdkOptions(){return this._sdkOptions}get Launchpad(){return this._launchpad}get Ido(){return this._ido}get XToken(){return this._xtokenModule}get XCetusModule(){return this._xcetusModule}get BoosterModule(){return this._boosterModule}get MakerModule(){return this._makerModule}updateCache(e,s,t=g){let i=this._cache[e];i?(i.overdueTime=P(t),i.value=s):i=new F(s,P(t)),this._cache[e]=i}getCache(e,s=!1){const t=this._cache[e];if(!s&&(t!=null&&t.isValid()))return t.value;delete this._cache[e]}};export{$e as C,T as L,E as X};
