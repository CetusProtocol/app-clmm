import{S as T,f as L,am as u,s as d,D as c}from"./pool.36054a1a.js";import{_ as i}from"./index.c9f4ff60.js";import{a1 as N,m as _,O as F}from"./entry.bcd578c9.js";function B(r){const g={fullRpcUrl:localStorage.getItem(`${r}-currentRpc`)||i[r||"Sui"].fullRpcUrl,faucetURL:localStorage.getItem(`${r}-currentRpc`)||i[r||"Sui"].faucetURL,simulationAccount:i[r||"Sui"].simulationAccount,xcetus:i[r||"Sui"].xcetus},s=N(new T(g)),w=L(),l=_(()=>w);F(()=>{l.value.address&&(s.senderAddress=l.value.address)});const m=async e=>await s.XCetusModule.getOwnerLockCetuss(e),C=async(e,t)=>u.getAvailableXCetus(e,t),y=async e=>await s.XCetusModule.getOwnerCetusCoins(e),M=async e=>await s.XCetusModule.getOwnerVeNFT(e),v=async(e,t)=>{const n={amount:e};t&&(n.venft_id=t);const a=await s.XCetusModule.convertPayload(n);return o(a)},f=async()=>{const e=await s.XCetusModule.mintVeNFTPayload();return o(e)},X=async(e,t)=>{const n=await s.XCetusModule.redeemNum(e,t);return{amountOut:n.amountOut,percent:d(new c(n.percent).mul(new c(100)).toString(),2)}},p=async(e,t)=>{const n=await s.XCetusModule.reverseRedeemNum(e,t);return{amountOut:n.amountOut,percent:d(new c(n.percent).mul(new c(100)).toString(),2)}},S=async(e,t,n)=>{const a=await s.XCetusModule.redeemLockPayload({venft_id:t,amount:e,lock_day:n});return o(a)},P=e=>u.getLockingCetuss(e),k=async(e,t)=>{const n=await s.XCetusModule.getLockCetus(e);if(n&&u.isLocked(n)){const a=s.XCetusModule.cancelRedeemPayload({venft_id:t,lock_id:e});return o(a)}},x=async(e,t)=>{const n=await s.XCetusModule.getLockCetus(e);if(n&&!u.isLocked(n)){const a=await s.XCetusModule.redeemPayload({venft_id:t,lock_id:e});return o(a)}},D=async()=>{const e=await s.XCetusModule.getDividendManager();return{nextStartTime:Number(u.getNextStartTime(e).toString()),...e}},h=async(e,t)=>{const n=await s.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);return{rewards:n&&n.rewards||[]}},R=async e=>{const t=await s.XCetusModule.getDividendManager();if(t.bonus_types.length>0){const n=await s.XCetusModule.redeemDividendPayload(e,t.bonus_types);return o(n)}},O=async e=>{const t=await s.XCetusModule.getDividendManager();if(t.bonus_types.length>0){const n=await s.XCetusModule.redeemDividendV2Payload(e,t.bonus_types);return o(n)}},b=async e=>{const t=await s.XCetusModule.getOwnerVeNFT(e);if(t){const n=await s.XCetusModule.getXcetusManager(),a=new c(t.xcetus_balance).div(n.treasury).mul(100).toString();return Number(a)>0&&Number(a)<.01?"<0.01":d(a,2)}else return 0},o=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getOwnerLockCetuss:m,getOwnerCetusCoins:y,getOwnerVeNFT:M,depositCetus:v,getMintVeNFTPayload:f,redeemNum:X,getRedeemLockPayload:S,getAvailableXCetus:C,getLockingCetuss:P,getCancelRedeemPayload:k,getVeNFTDividendInfo:h,reverseRedeemNum:p,getRedeemPayload:x,getRedeemDividendPayload:R,getMyShare:b,getDividendManager:D,getPeriod:e=>{const t=Date.now()/1e3,{start_time:n,interval_day:a}=e;return Math.ceil((t-n)/(a*24*3600))},getRedeemDividendV2Payload:O}}export{B as u};
