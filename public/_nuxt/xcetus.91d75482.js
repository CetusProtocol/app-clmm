import{p as u,a as m,s as g,a6 as p}from"./pool.ac9878c4.js";import{u as l}from"./useWhale.c63596c2.js";import{a5 as v}from"./entry.f573392f.js";import{c as C}from"./sha256.692c34db.js";import{D as w}from"./decimal.0e8aa3f1.js";const b=v("xcetus",{state:()=>({venft_id:"",xWhaleBalance:"--",venftInfo:{},pendingAmount:"--",newPendingAmount:"--",whaleBalance:"--",ownerLocks:[],availableXwhale:"--",redeemingXwhale:"--",nextStartTime:"",xcetusShare:"--",pendingCoinInfo:{},newPendingCoinInfo:{},cetusApr:"",claimLoading:"",dividendManagerInfo:{}}),actions:{async getOwnerVeNFT(t){const n=l("Sui");try{const e=await n.getOwnerVeNFT(t);e?(this.venft_id=e.id,this.xWhaleBalance=u(e.xcetus_balance,9),this.venftInfo={id:e.id,type:e.type,index:e.index,xcetus_balance:e.xcetus_balance},this.getVeNFTDividendInfo()):(this.xWhaleBalance="0",this.availableXwhale="0",this.redeemingXwhale="0",this.pendingAmount="0",this.newPendingAmount="0")}catch{this.xWhaleBalance="--",this.availableXwhale="--",this.redeemingXwhale="--",this.pendingAmount="--",this.newPendingAmount="--"}},async getVeNFTDividendInfo(){const t=l("Sui"),n=m("Sui");try{const e=await t.getVeNFTDividendInfo(this.venft_id,this.dividendManagerInfo),r=await t.getPeriod(this.dividendManagerInfo),d=await n.getTokenList(),h=[];if(e&&e.rewards&&e.rewards.length>0){for(let s=0;s<e.rewards.length;s++)if(e.rewards[s].period<r){const a=e.rewards[s].rewards;for(let o=0;o<a.length;o++){const i=a[o];Number(i.amount)>0&&h.push({...i})}}if(h&&h.length>0){const s={};for(let o=0;o<h.length;o++){const i=h[o];if(s[i.coin_type])s[i.coin_type].amount=new w(s[i.coin_type].amount).add(new w(i.amount)).toString();else{let c=d.filter(f=>f.address==i.coin_type)[0];c||(c=(await n.getTokenListByCoinType([i.coin_type]))[0]),s[i.coin_type]={...i,...c}}}const a=Object.values(s);this.pendingCoinInfo=a[0],this.pendingAmount=g(u(a[0].amount,a[0].decimals),6),this.newPendingCoinInfo=a&&a.length>1?a[1]:{},this.newPendingAmount=a&&a.length>1?g(u(a[1].amount,a[1].decimals),6):0}else{const a=(await t.getPhaseDividendInfo(this.dividendManagerInfo)).bonus.filter(c=>Number(c.value)>0)[0].name,o=p(a,!1);let i=d.filter(c=>c.address==(o=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":o))[0];i||(i=(await n.getTokenListByCoinType([o]))[0]),this.newPendingCoinInfo=i,this.pendingAmount="0",this.newPendingAmount="0"}}}catch{this.pendingAmount="--",this.newPendingAmount="--"}},async getDividendManager(){const n=await l("Sui").getDividendManager();this.nextStartTime=n.nextStartTime,this.dividendManagerInfo=n,this.getVeNFTDividendInfo()},async getAccountWhaleBalance(t){const e=await l("Sui").getOwnerCetusCoins(t);if(e&&e.length>0){let r=new w(0);e.forEach(d=>{r=r.add(u(d.balance.toString(),9))}),this.whaleBalance=r}else this.whaleBalance="0"},async getOwnerLockCetuss(t){const r=(await l("Sui").getOwnerLockCetuss(t)).sort((d,h)=>d.locked_until_time-h.locked_until_time);this.ownerLocks=r,this.setClaimLoading(""),this.getAvailableXCetus()},async getAvailableXCetus(){const n=await l("Sui").getAvailableXCetus(this.venftInfo,this.ownerLocks);this.availableXwhale=u(n,9),this.redeemingXwhale=this.xWhaleBalance!=="--"?new w(this.xWhaleBalance).sub(new w(this.availableXwhale)).toString():"--"},async getMyShare(t){const n=l("Sui");try{const e=await n.getMyShare(t);e?this.xcetusShare=Number(e)>0&&Number(e)<.01?"<0.01":e:this.xcetusShare="0"}catch{this.xcetusShare=""}},async getXcetusApr(){const{data:t}=await fetch(`${C.Sui.api}/v2/sui/storm/dividend_rewards`).then(e=>e.json()),n=t.apr&&t.apr.replace("%","");this.cetusApr=Number(n)>0&&Number(n)<.01?"<0.01":n},loginOut(){this.venft_id="",this.xWhaleBalance="--",this.venftInfo={},this.pendingAmount="--",this.whaleBalance="--",this.ownerLocks=[],this.availableXwhale="--",this.redeemingXwhale="--",this.xcetusShare="--",this.cetusApr="--"},setClaimLoading(t){this.claimLoading=t}}});export{b as u};
